// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/autocli/v1/options.proto

package cosmos.autocli.v1;

public final class Options {
  private Options() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ModuleOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.autocli.v1.ModuleOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * tx describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
     * @return Whether the tx field is set.
     */
    boolean hasTx();
    /**
     * <pre>
     * tx describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
     * @return The tx.
     */
    cosmos.autocli.v1.Options.ServiceCommandDescriptor getTx();
    /**
     * <pre>
     * tx describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
     */
    cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder getTxOrBuilder();

    /**
     * <pre>
     * query describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
     * @return Whether the query field is set.
     */
    boolean hasQuery();
    /**
     * <pre>
     * query describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
     * @return The query.
     */
    cosmos.autocli.v1.Options.ServiceCommandDescriptor getQuery();
    /**
     * <pre>
     * query describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
     */
    cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder getQueryOrBuilder();
  }
  /**
   * <pre>
   * ModuleOptions describes the CLI options for a Cosmos SDK module.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.ModuleOptions}
   */
  public static final class ModuleOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.ModuleOptions)
      ModuleOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ModuleOptions.newBuilder() to construct.
    private ModuleOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModuleOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ModuleOptions();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ModuleOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ModuleOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.autocli.v1.Options.ModuleOptions.class, cosmos.autocli.v1.Options.ModuleOptions.Builder.class);
    }

    public static final int TX_FIELD_NUMBER = 1;
    private cosmos.autocli.v1.Options.ServiceCommandDescriptor tx_;
    /**
     * <pre>
     * tx describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
     * @return Whether the tx field is set.
     */
    @java.lang.Override
    public boolean hasTx() {
      return tx_ != null;
    }
    /**
     * <pre>
     * tx describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
     * @return The tx.
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.ServiceCommandDescriptor getTx() {
      return tx_ == null ? cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : tx_;
    }
    /**
     * <pre>
     * tx describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder getTxOrBuilder() {
      return tx_ == null ? cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : tx_;
    }

    public static final int QUERY_FIELD_NUMBER = 2;
    private cosmos.autocli.v1.Options.ServiceCommandDescriptor query_;
    /**
     * <pre>
     * query describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
     * @return Whether the query field is set.
     */
    @java.lang.Override
    public boolean hasQuery() {
      return query_ != null;
    }
    /**
     * <pre>
     * query describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
     * @return The query.
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.ServiceCommandDescriptor getQuery() {
      return query_ == null ? cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : query_;
    }
    /**
     * <pre>
     * query describes the tx command for the module.
     * </pre>
     *
     * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder getQueryOrBuilder() {
      return query_ == null ? cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : query_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tx_ != null) {
        output.writeMessage(1, getTx());
      }
      if (query_ != null) {
        output.writeMessage(2, getQuery());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tx_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTx());
      }
      if (query_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getQuery());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.autocli.v1.Options.ModuleOptions)) {
        return super.equals(obj);
      }
      cosmos.autocli.v1.Options.ModuleOptions other = (cosmos.autocli.v1.Options.ModuleOptions) obj;

      if (hasTx() != other.hasTx()) return false;
      if (hasTx()) {
        if (!getTx()
            .equals(other.getTx())) return false;
      }
      if (hasQuery() != other.hasQuery()) return false;
      if (hasQuery()) {
        if (!getQuery()
            .equals(other.getQuery())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTx()) {
        hash = (37 * hash) + TX_FIELD_NUMBER;
        hash = (53 * hash) + getTx().hashCode();
      }
      if (hasQuery()) {
        hash = (37 * hash) + QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getQuery().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.ModuleOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.autocli.v1.Options.ModuleOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ModuleOptions describes the CLI options for a Cosmos SDK module.
     * </pre>
     *
     * Protobuf type {@code cosmos.autocli.v1.ModuleOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.ModuleOptions)
        cosmos.autocli.v1.Options.ModuleOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ModuleOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ModuleOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.autocli.v1.Options.ModuleOptions.class, cosmos.autocli.v1.Options.ModuleOptions.Builder.class);
      }

      // Construct using cosmos.autocli.v1.Options.ModuleOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tx_ = null;
        if (txBuilder_ != null) {
          txBuilder_.dispose();
          txBuilder_ = null;
        }
        query_ = null;
        if (queryBuilder_ != null) {
          queryBuilder_.dispose();
          queryBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ModuleOptions_descriptor;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.ModuleOptions getDefaultInstanceForType() {
        return cosmos.autocli.v1.Options.ModuleOptions.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.ModuleOptions build() {
        cosmos.autocli.v1.Options.ModuleOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.ModuleOptions buildPartial() {
        cosmos.autocli.v1.Options.ModuleOptions result = new cosmos.autocli.v1.Options.ModuleOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cosmos.autocli.v1.Options.ModuleOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tx_ = txBuilder_ == null
              ? tx_
              : txBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.query_ = queryBuilder_ == null
              ? query_
              : queryBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.autocli.v1.Options.ModuleOptions) {
          return mergeFrom((cosmos.autocli.v1.Options.ModuleOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.autocli.v1.Options.ModuleOptions other) {
        if (other == cosmos.autocli.v1.Options.ModuleOptions.getDefaultInstance()) return this;
        if (other.hasTx()) {
          mergeTx(other.getTx());
        }
        if (other.hasQuery()) {
          mergeQuery(other.getQuery());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTxFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getQueryFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private cosmos.autocli.v1.Options.ServiceCommandDescriptor tx_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.autocli.v1.Options.ServiceCommandDescriptor, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder, cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder> txBuilder_;
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       * @return Whether the tx field is set.
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       * @return The tx.
       */
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor getTx() {
        if (txBuilder_ == null) {
          return tx_ == null ? cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : tx_;
        } else {
          return txBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      public Builder setTx(cosmos.autocli.v1.Options.ServiceCommandDescriptor value) {
        if (txBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tx_ = value;
        } else {
          txBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      public Builder setTx(
          cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder builderForValue) {
        if (txBuilder_ == null) {
          tx_ = builderForValue.build();
        } else {
          txBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      public Builder mergeTx(cosmos.autocli.v1.Options.ServiceCommandDescriptor value) {
        if (txBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            tx_ != null &&
            tx_ != cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance()) {
            getTxBuilder().mergeFrom(value);
          } else {
            tx_ = value;
          }
        } else {
          txBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tx_ = null;
        if (txBuilder_ != null) {
          txBuilder_.dispose();
          txBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder getTxBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTxFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      public cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder getTxOrBuilder() {
        if (txBuilder_ != null) {
          return txBuilder_.getMessageOrBuilder();
        } else {
          return tx_ == null ?
              cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : tx_;
        }
      }
      /**
       * <pre>
       * tx describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor tx = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.autocli.v1.Options.ServiceCommandDescriptor, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder, cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder> 
          getTxFieldBuilder() {
        if (txBuilder_ == null) {
          txBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.autocli.v1.Options.ServiceCommandDescriptor, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder, cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder>(
                  getTx(),
                  getParentForChildren(),
                  isClean());
          tx_ = null;
        }
        return txBuilder_;
      }

      private cosmos.autocli.v1.Options.ServiceCommandDescriptor query_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.autocli.v1.Options.ServiceCommandDescriptor, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder, cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder> queryBuilder_;
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       * @return Whether the query field is set.
       */
      public boolean hasQuery() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       * @return The query.
       */
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor getQuery() {
        if (queryBuilder_ == null) {
          return query_ == null ? cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : query_;
        } else {
          return queryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      public Builder setQuery(cosmos.autocli.v1.Options.ServiceCommandDescriptor value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          query_ = value;
        } else {
          queryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      public Builder setQuery(
          cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder builderForValue) {
        if (queryBuilder_ == null) {
          query_ = builderForValue.build();
        } else {
          queryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      public Builder mergeQuery(cosmos.autocli.v1.Options.ServiceCommandDescriptor value) {
        if (queryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            query_ != null &&
            query_ != cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance()) {
            getQueryBuilder().mergeFrom(value);
          } else {
            query_ = value;
          }
        } else {
          queryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      public Builder clearQuery() {
        bitField0_ = (bitField0_ & ~0x00000002);
        query_ = null;
        if (queryBuilder_ != null) {
          queryBuilder_.dispose();
          queryBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder getQueryBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      public cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder getQueryOrBuilder() {
        if (queryBuilder_ != null) {
          return queryBuilder_.getMessageOrBuilder();
        } else {
          return query_ == null ?
              cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance() : query_;
        }
      }
      /**
       * <pre>
       * query describes the tx command for the module.
       * </pre>
       *
       * <code>.cosmos.autocli.v1.ServiceCommandDescriptor query = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.autocli.v1.Options.ServiceCommandDescriptor, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder, cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          queryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.autocli.v1.Options.ServiceCommandDescriptor, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder, cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder>(
                  getQuery(),
                  getParentForChildren(),
                  isClean());
          query_ = null;
        }
        return queryBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.ModuleOptions)
    }

    // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.ModuleOptions)
    private static final cosmos.autocli.v1.Options.ModuleOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.autocli.v1.Options.ModuleOptions();
    }

    public static cosmos.autocli.v1.Options.ModuleOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModuleOptions>
        PARSER = new com.google.protobuf.AbstractParser<ModuleOptions>() {
      @java.lang.Override
      public ModuleOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ModuleOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModuleOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.autocli.v1.Options.ModuleOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServiceCommandDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.autocli.v1.ServiceCommandDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     * </pre>
     *
     * <code>string service = 1;</code>
     * @return The service.
     */
    java.lang.String getService();
    /**
     * <pre>
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     * </pre>
     *
     * <code>string service = 1;</code>
     * @return The bytes for service.
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    java.util.List<cosmos.autocli.v1.Options.RpcCommandOptions> 
        getRpcCommandOptionsList();
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    cosmos.autocli.v1.Options.RpcCommandOptions getRpcCommandOptions(int index);
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    int getRpcCommandOptionsCount();
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    java.util.List<? extends cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder> 
        getRpcCommandOptionsOrBuilderList();
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder getRpcCommandOptionsOrBuilder(
        int index);

    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    int getSubCommandsCount();
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    boolean containsSubCommands(
        java.lang.String key);
    /**
     * Use {@link #getSubCommandsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
    getSubCommands();
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
    getSubCommandsMap();
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    /* nullable */
cosmos.autocli.v1.Options.ServiceCommandDescriptor getSubCommandsOrDefault(
        java.lang.String key,
        /* nullable */
cosmos.autocli.v1.Options.ServiceCommandDescriptor defaultValue);
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    cosmos.autocli.v1.Options.ServiceCommandDescriptor getSubCommandsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * ServiceCommandDescriptor describes a CLI command based on a protobuf service.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.ServiceCommandDescriptor}
   */
  public static final class ServiceCommandDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.ServiceCommandDescriptor)
      ServiceCommandDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServiceCommandDescriptor.newBuilder() to construct.
    private ServiceCommandDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServiceCommandDescriptor() {
      service_ = "";
      rpcCommandOptions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServiceCommandDescriptor();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetSubCommands();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.autocli.v1.Options.ServiceCommandDescriptor.class, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder.class);
    }

    public static final int SERVICE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object service_ = "";
    /**
     * <pre>
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     * </pre>
     *
     * <code>string service = 1;</code>
     * @return The service.
     */
    @java.lang.Override
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     * </pre>
     *
     * <code>string service = 1;</code>
     * @return The bytes for service.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RPC_COMMAND_OPTIONS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<cosmos.autocli.v1.Options.RpcCommandOptions> rpcCommandOptions_;
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.autocli.v1.Options.RpcCommandOptions> getRpcCommandOptionsList() {
      return rpcCommandOptions_;
    }
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder> 
        getRpcCommandOptionsOrBuilderList() {
      return rpcCommandOptions_;
    }
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    @java.lang.Override
    public int getRpcCommandOptionsCount() {
      return rpcCommandOptions_.size();
    }
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.RpcCommandOptions getRpcCommandOptions(int index) {
      return rpcCommandOptions_.get(index);
    }
    /**
     * <pre>
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder getRpcCommandOptionsOrBuilder(
        int index) {
      return rpcCommandOptions_.get(index);
    }

    public static final int SUB_COMMANDS_FIELD_NUMBER = 3;
    private static final class SubCommandsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>newDefaultInstance(
                  cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_SubCommandsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> subCommands_;
    private com.google.protobuf.MapField<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
    internalGetSubCommands() {
      if (subCommands_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SubCommandsDefaultEntryHolder.defaultEntry);
      }
      return subCommands_;
    }
    public int getSubCommandsCount() {
      return internalGetSubCommands().getMap().size();
    }
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    @java.lang.Override
    public boolean containsSubCommands(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSubCommands().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSubCommandsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> getSubCommands() {
      return getSubCommandsMap();
    }
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> getSubCommandsMap() {
      return internalGetSubCommands().getMap();
    }
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
cosmos.autocli.v1.Options.ServiceCommandDescriptor getSubCommandsOrDefault(
        java.lang.String key,
        /* nullable */
cosmos.autocli.v1.Options.ServiceCommandDescriptor defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> map =
          internalGetSubCommands().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.ServiceCommandDescriptor getSubCommandsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> map =
          internalGetSubCommands().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, service_);
      }
      for (int i = 0; i < rpcCommandOptions_.size(); i++) {
        output.writeMessage(2, rpcCommandOptions_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSubCommands(),
          SubCommandsDefaultEntryHolder.defaultEntry,
          3);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, service_);
      }
      for (int i = 0; i < rpcCommandOptions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rpcCommandOptions_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> entry
           : internalGetSubCommands().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
        subCommands__ = SubCommandsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, subCommands__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.autocli.v1.Options.ServiceCommandDescriptor)) {
        return super.equals(obj);
      }
      cosmos.autocli.v1.Options.ServiceCommandDescriptor other = (cosmos.autocli.v1.Options.ServiceCommandDescriptor) obj;

      if (!getService()
          .equals(other.getService())) return false;
      if (!getRpcCommandOptionsList()
          .equals(other.getRpcCommandOptionsList())) return false;
      if (!internalGetSubCommands().equals(
          other.internalGetSubCommands())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      if (getRpcCommandOptionsCount() > 0) {
        hash = (37 * hash) + RPC_COMMAND_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRpcCommandOptionsList().hashCode();
      }
      if (!internalGetSubCommands().getMap().isEmpty()) {
        hash = (37 * hash) + SUB_COMMANDS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSubCommands().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.autocli.v1.Options.ServiceCommandDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ServiceCommandDescriptor describes a CLI command based on a protobuf service.
     * </pre>
     *
     * Protobuf type {@code cosmos.autocli.v1.ServiceCommandDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.ServiceCommandDescriptor)
        cosmos.autocli.v1.Options.ServiceCommandDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetSubCommands();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableSubCommands();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.autocli.v1.Options.ServiceCommandDescriptor.class, cosmos.autocli.v1.Options.ServiceCommandDescriptor.Builder.class);
      }

      // Construct using cosmos.autocli.v1.Options.ServiceCommandDescriptor.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        service_ = "";
        if (rpcCommandOptionsBuilder_ == null) {
          rpcCommandOptions_ = java.util.Collections.emptyList();
        } else {
          rpcCommandOptions_ = null;
          rpcCommandOptionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableSubCommands().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor getDefaultInstanceForType() {
        return cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor build() {
        cosmos.autocli.v1.Options.ServiceCommandDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor buildPartial() {
        cosmos.autocli.v1.Options.ServiceCommandDescriptor result = new cosmos.autocli.v1.Options.ServiceCommandDescriptor(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(cosmos.autocli.v1.Options.ServiceCommandDescriptor result) {
        if (rpcCommandOptionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            rpcCommandOptions_ = java.util.Collections.unmodifiableList(rpcCommandOptions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rpcCommandOptions_ = rpcCommandOptions_;
        } else {
          result.rpcCommandOptions_ = rpcCommandOptionsBuilder_.build();
        }
      }

      private void buildPartial0(cosmos.autocli.v1.Options.ServiceCommandDescriptor result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.service_ = service_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.subCommands_ = internalGetSubCommands();
          result.subCommands_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.autocli.v1.Options.ServiceCommandDescriptor) {
          return mergeFrom((cosmos.autocli.v1.Options.ServiceCommandDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.autocli.v1.Options.ServiceCommandDescriptor other) {
        if (other == cosmos.autocli.v1.Options.ServiceCommandDescriptor.getDefaultInstance()) return this;
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (rpcCommandOptionsBuilder_ == null) {
          if (!other.rpcCommandOptions_.isEmpty()) {
            if (rpcCommandOptions_.isEmpty()) {
              rpcCommandOptions_ = other.rpcCommandOptions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRpcCommandOptionsIsMutable();
              rpcCommandOptions_.addAll(other.rpcCommandOptions_);
            }
            onChanged();
          }
        } else {
          if (!other.rpcCommandOptions_.isEmpty()) {
            if (rpcCommandOptionsBuilder_.isEmpty()) {
              rpcCommandOptionsBuilder_.dispose();
              rpcCommandOptionsBuilder_ = null;
              rpcCommandOptions_ = other.rpcCommandOptions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rpcCommandOptionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRpcCommandOptionsFieldBuilder() : null;
            } else {
              rpcCommandOptionsBuilder_.addAllMessages(other.rpcCommandOptions_);
            }
          }
        }
        internalGetMutableSubCommands().mergeFrom(
            other.internalGetSubCommands());
        bitField0_ |= 0x00000004;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                service_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                cosmos.autocli.v1.Options.RpcCommandOptions m =
                    input.readMessage(
                        cosmos.autocli.v1.Options.RpcCommandOptions.parser(),
                        extensionRegistry);
                if (rpcCommandOptionsBuilder_ == null) {
                  ensureRpcCommandOptionsIsMutable();
                  rpcCommandOptions_.add(m);
                } else {
                  rpcCommandOptionsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.google.protobuf.MapEntry<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
                subCommands__ = input.readMessage(
                    SubCommandsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSubCommands().getMutableMap().put(
                    subCommands__.getKey(), subCommands__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object service_ = "";
      /**
       * <pre>
       * service is the fully qualified name of the protobuf service to build
       * the command from. It can be left empty if sub_commands are used instead
       * which may be the case if a module provides multiple tx and/or query services.
       * </pre>
       *
       * <code>string service = 1;</code>
       * @return The service.
       */
      public java.lang.String getService() {
        java.lang.Object ref = service_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * service is the fully qualified name of the protobuf service to build
       * the command from. It can be left empty if sub_commands are used instead
       * which may be the case if a module provides multiple tx and/or query services.
       * </pre>
       *
       * <code>string service = 1;</code>
       * @return The bytes for service.
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        java.lang.Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * service is the fully qualified name of the protobuf service to build
       * the command from. It can be left empty if sub_commands are used instead
       * which may be the case if a module provides multiple tx and/or query services.
       * </pre>
       *
       * <code>string service = 1;</code>
       * @param value The service to set.
       * @return This builder for chaining.
       */
      public Builder setService(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        service_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * service is the fully qualified name of the protobuf service to build
       * the command from. It can be left empty if sub_commands are used instead
       * which may be the case if a module provides multiple tx and/or query services.
       * </pre>
       *
       * <code>string service = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearService() {
        service_ = getDefaultInstance().getService();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * service is the fully qualified name of the protobuf service to build
       * the command from. It can be left empty if sub_commands are used instead
       * which may be the case if a module provides multiple tx and/or query services.
       * </pre>
       *
       * <code>string service = 1;</code>
       * @param value The bytes for service to set.
       * @return This builder for chaining.
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        service_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<cosmos.autocli.v1.Options.RpcCommandOptions> rpcCommandOptions_ =
        java.util.Collections.emptyList();
      private void ensureRpcCommandOptionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rpcCommandOptions_ = new java.util.ArrayList<cosmos.autocli.v1.Options.RpcCommandOptions>(rpcCommandOptions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.autocli.v1.Options.RpcCommandOptions, cosmos.autocli.v1.Options.RpcCommandOptions.Builder, cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder> rpcCommandOptionsBuilder_;

      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public java.util.List<cosmos.autocli.v1.Options.RpcCommandOptions> getRpcCommandOptionsList() {
        if (rpcCommandOptionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rpcCommandOptions_);
        } else {
          return rpcCommandOptionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public int getRpcCommandOptionsCount() {
        if (rpcCommandOptionsBuilder_ == null) {
          return rpcCommandOptions_.size();
        } else {
          return rpcCommandOptionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public cosmos.autocli.v1.Options.RpcCommandOptions getRpcCommandOptions(int index) {
        if (rpcCommandOptionsBuilder_ == null) {
          return rpcCommandOptions_.get(index);
        } else {
          return rpcCommandOptionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder setRpcCommandOptions(
          int index, cosmos.autocli.v1.Options.RpcCommandOptions value) {
        if (rpcCommandOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.set(index, value);
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder setRpcCommandOptions(
          int index, cosmos.autocli.v1.Options.RpcCommandOptions.Builder builderForValue) {
        if (rpcCommandOptionsBuilder_ == null) {
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.set(index, builderForValue.build());
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder addRpcCommandOptions(cosmos.autocli.v1.Options.RpcCommandOptions value) {
        if (rpcCommandOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.add(value);
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder addRpcCommandOptions(
          int index, cosmos.autocli.v1.Options.RpcCommandOptions value) {
        if (rpcCommandOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.add(index, value);
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder addRpcCommandOptions(
          cosmos.autocli.v1.Options.RpcCommandOptions.Builder builderForValue) {
        if (rpcCommandOptionsBuilder_ == null) {
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.add(builderForValue.build());
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder addRpcCommandOptions(
          int index, cosmos.autocli.v1.Options.RpcCommandOptions.Builder builderForValue) {
        if (rpcCommandOptionsBuilder_ == null) {
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.add(index, builderForValue.build());
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder addAllRpcCommandOptions(
          java.lang.Iterable<? extends cosmos.autocli.v1.Options.RpcCommandOptions> values) {
        if (rpcCommandOptionsBuilder_ == null) {
          ensureRpcCommandOptionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rpcCommandOptions_);
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder clearRpcCommandOptions() {
        if (rpcCommandOptionsBuilder_ == null) {
          rpcCommandOptions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public Builder removeRpcCommandOptions(int index) {
        if (rpcCommandOptionsBuilder_ == null) {
          ensureRpcCommandOptionsIsMutable();
          rpcCommandOptions_.remove(index);
          onChanged();
        } else {
          rpcCommandOptionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public cosmos.autocli.v1.Options.RpcCommandOptions.Builder getRpcCommandOptionsBuilder(
          int index) {
        return getRpcCommandOptionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder getRpcCommandOptionsOrBuilder(
          int index) {
        if (rpcCommandOptionsBuilder_ == null) {
          return rpcCommandOptions_.get(index);  } else {
          return rpcCommandOptionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public java.util.List<? extends cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder> 
           getRpcCommandOptionsOrBuilderList() {
        if (rpcCommandOptionsBuilder_ != null) {
          return rpcCommandOptionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rpcCommandOptions_);
        }
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public cosmos.autocli.v1.Options.RpcCommandOptions.Builder addRpcCommandOptionsBuilder() {
        return getRpcCommandOptionsFieldBuilder().addBuilder(
            cosmos.autocli.v1.Options.RpcCommandOptions.getDefaultInstance());
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public cosmos.autocli.v1.Options.RpcCommandOptions.Builder addRpcCommandOptionsBuilder(
          int index) {
        return getRpcCommandOptionsFieldBuilder().addBuilder(
            index, cosmos.autocli.v1.Options.RpcCommandOptions.getDefaultInstance());
      }
      /**
       * <pre>
       * rpc_command_options are options for commands generated from rpc methods.
       * If no options are specified for a given rpc method on the service, a
       * command will be generated for that method with the default options.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2;</code>
       */
      public java.util.List<cosmos.autocli.v1.Options.RpcCommandOptions.Builder> 
           getRpcCommandOptionsBuilderList() {
        return getRpcCommandOptionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.autocli.v1.Options.RpcCommandOptions, cosmos.autocli.v1.Options.RpcCommandOptions.Builder, cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder> 
          getRpcCommandOptionsFieldBuilder() {
        if (rpcCommandOptionsBuilder_ == null) {
          rpcCommandOptionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.autocli.v1.Options.RpcCommandOptions, cosmos.autocli.v1.Options.RpcCommandOptions.Builder, cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder>(
                  rpcCommandOptions_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          rpcCommandOptions_ = null;
        }
        return rpcCommandOptionsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> subCommands_;
      private com.google.protobuf.MapField<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
          internalGetSubCommands() {
        if (subCommands_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SubCommandsDefaultEntryHolder.defaultEntry);
        }
        return subCommands_;
      }
      private com.google.protobuf.MapField<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
          internalGetMutableSubCommands() {
        if (subCommands_ == null) {
          subCommands_ = com.google.protobuf.MapField.newMapField(
              SubCommandsDefaultEntryHolder.defaultEntry);
        }
        if (!subCommands_.isMutable()) {
          subCommands_ = subCommands_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return subCommands_;
      }
      public int getSubCommandsCount() {
        return internalGetSubCommands().getMap().size();
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      @java.lang.Override
      public boolean containsSubCommands(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetSubCommands().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSubCommandsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> getSubCommands() {
        return getSubCommandsMap();
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> getSubCommandsMap() {
        return internalGetSubCommands().getMap();
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
cosmos.autocli.v1.Options.ServiceCommandDescriptor getSubCommandsOrDefault(
          java.lang.String key,
          /* nullable */
cosmos.autocli.v1.Options.ServiceCommandDescriptor defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> map =
            internalGetSubCommands().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      @java.lang.Override
      public cosmos.autocli.v1.Options.ServiceCommandDescriptor getSubCommandsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> map =
            internalGetSubCommands().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSubCommands() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableSubCommands().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      public Builder removeSubCommands(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableSubCommands().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor>
          getMutableSubCommands() {
        bitField0_ |= 0x00000004;
        return internalGetMutableSubCommands().getMutableMap();
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      public Builder putSubCommands(
          java.lang.String key,
          cosmos.autocli.v1.Options.ServiceCommandDescriptor value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableSubCommands().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * sub_commands is a map of optional sub-commands for this command based on
       * different protobuf services. The map key is used as the name of the
       * sub-command.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.ServiceCommandDescriptor&gt; sub_commands = 3;</code>
       */
      public Builder putAllSubCommands(
          java.util.Map<java.lang.String, cosmos.autocli.v1.Options.ServiceCommandDescriptor> values) {
        internalGetMutableSubCommands().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.ServiceCommandDescriptor)
    }

    // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.ServiceCommandDescriptor)
    private static final cosmos.autocli.v1.Options.ServiceCommandDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.autocli.v1.Options.ServiceCommandDescriptor();
    }

    public static cosmos.autocli.v1.Options.ServiceCommandDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceCommandDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<ServiceCommandDescriptor>() {
      @java.lang.Override
      public ServiceCommandDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServiceCommandDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceCommandDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.autocli.v1.Options.ServiceCommandDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcCommandOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.autocli.v1.RpcCommandOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1;</code>
     * @return The rpcMethod.
     */
    java.lang.String getRpcMethod();
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1;</code>
     * @return The bytes for rpcMethod.
     */
    com.google.protobuf.ByteString
        getRpcMethodBytes();

    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2;</code>
     * @return The use.
     */
    java.lang.String getUse();
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2;</code>
     * @return The bytes for use.
     */
    com.google.protobuf.ByteString
        getUseBytes();

    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3;</code>
     * @return The long.
     */
    java.lang.String getLong();
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3;</code>
     * @return The bytes for long.
     */
    com.google.protobuf.ByteString
        getLongBytes();

    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4;</code>
     * @return The short.
     */
    java.lang.String getShort();
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4;</code>
     * @return The bytes for short.
     */
    com.google.protobuf.ByteString
        getShortBytes();

    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5;</code>
     * @return The example.
     */
    java.lang.String getExample();
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5;</code>
     * @return The bytes for example.
     */
    com.google.protobuf.ByteString
        getExampleBytes();

    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @return A list containing the alias.
     */
    java.util.List<java.lang.String>
        getAliasList();
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @return The count of alias.
     */
    int getAliasCount();
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @param index The index of the element to return.
     * @return The alias at the given index.
     */
    java.lang.String getAlias(int index);
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the alias at the given index.
     */
    com.google.protobuf.ByteString
        getAliasBytes(int index);

    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @return A list containing the suggestFor.
     */
    java.util.List<java.lang.String>
        getSuggestForList();
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @return The count of suggestFor.
     */
    int getSuggestForCount();
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @param index The index of the element to return.
     * @return The suggestFor at the given index.
     */
    java.lang.String getSuggestFor(int index);
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the suggestFor at the given index.
     */
    com.google.protobuf.ByteString
        getSuggestForBytes(int index);

    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8;</code>
     * @return The deprecated.
     */
    java.lang.String getDeprecated();
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8;</code>
     * @return The bytes for deprecated.
     */
    com.google.protobuf.ByteString
        getDeprecatedBytes();

    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    int getFlagOptionsCount();
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    boolean containsFlagOptions(
        java.lang.String key);
    /**
     * Use {@link #getFlagOptionsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
    getFlagOptions();
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
    getFlagOptionsMap();
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    /* nullable */
cosmos.autocli.v1.Options.FlagOptions getFlagOptionsOrDefault(
        java.lang.String key,
        /* nullable */
cosmos.autocli.v1.Options.FlagOptions defaultValue);
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    cosmos.autocli.v1.Options.FlagOptions getFlagOptionsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    java.util.List<cosmos.autocli.v1.Options.PositionalArgDescriptor> 
        getPositionalArgsList();
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    cosmos.autocli.v1.Options.PositionalArgDescriptor getPositionalArgs(int index);
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    int getPositionalArgsCount();
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    java.util.List<? extends cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder> 
        getPositionalArgsOrBuilderList();
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder getPositionalArgsOrBuilder(
        int index);

    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12;</code>
     * @return The skip.
     */
    boolean getSkip();
  }
  /**
   * <pre>
   * RpcCommandOptions specifies options for commands generated from protobuf
   * rpc methods.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.RpcCommandOptions}
   */
  public static final class RpcCommandOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.RpcCommandOptions)
      RpcCommandOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RpcCommandOptions.newBuilder() to construct.
    private RpcCommandOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcCommandOptions() {
      rpcMethod_ = "";
      use_ = "";
      long_ = "";
      short_ = "";
      example_ = "";
      alias_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      suggestFor_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      deprecated_ = "";
      version_ = "";
      positionalArgs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RpcCommandOptions();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetFlagOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_RpcCommandOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.autocli.v1.Options.RpcCommandOptions.class, cosmos.autocli.v1.Options.RpcCommandOptions.Builder.class);
    }

    public static final int RPC_METHOD_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object rpcMethod_ = "";
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1;</code>
     * @return The rpcMethod.
     */
    @java.lang.Override
    public java.lang.String getRpcMethod() {
      java.lang.Object ref = rpcMethod_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rpcMethod_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1;</code>
     * @return The bytes for rpcMethod.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRpcMethodBytes() {
      java.lang.Object ref = rpcMethod_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rpcMethod_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object use_ = "";
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2;</code>
     * @return The use.
     */
    @java.lang.Override
    public java.lang.String getUse() {
      java.lang.Object ref = use_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        use_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     *
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2;</code>
     * @return The bytes for use.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUseBytes() {
      java.lang.Object ref = use_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        use_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LONG_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object long_ = "";
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3;</code>
     * @return The long.
     */
    @java.lang.Override
    public java.lang.String getLong() {
      java.lang.Object ref = long_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        long_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3;</code>
     * @return The bytes for long.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLongBytes() {
      java.lang.Object ref = long_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        long_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHORT_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object short_ = "";
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4;</code>
     * @return The short.
     */
    @java.lang.Override
    public java.lang.String getShort() {
      java.lang.Object ref = short_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        short_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4;</code>
     * @return The bytes for short.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShortBytes() {
      java.lang.Object ref = short_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        short_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXAMPLE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object example_ = "";
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5;</code>
     * @return The example.
     */
    @java.lang.Override
    public java.lang.String getExample() {
      java.lang.Object ref = example_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        example_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5;</code>
     * @return The bytes for example.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExampleBytes() {
      java.lang.Object ref = example_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        example_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALIAS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList alias_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @return A list containing the alias.
     */
    public com.google.protobuf.ProtocolStringList
        getAliasList() {
      return alias_;
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @return The count of alias.
     */
    public int getAliasCount() {
      return alias_.size();
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @param index The index of the element to return.
     * @return The alias at the given index.
     */
    public java.lang.String getAlias(int index) {
      return alias_.get(index);
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the alias at the given index.
     */
    public com.google.protobuf.ByteString
        getAliasBytes(int index) {
      return alias_.getByteString(index);
    }

    public static final int SUGGEST_FOR_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList suggestFor_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @return A list containing the suggestFor.
     */
    public com.google.protobuf.ProtocolStringList
        getSuggestForList() {
      return suggestFor_;
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @return The count of suggestFor.
     */
    public int getSuggestForCount() {
      return suggestFor_.size();
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @param index The index of the element to return.
     * @return The suggestFor at the given index.
     */
    public java.lang.String getSuggestFor(int index) {
      return suggestFor_.get(index);
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the suggestFor at the given index.
     */
    public com.google.protobuf.ByteString
        getSuggestForBytes(int index) {
      return suggestFor_.getByteString(index);
    }

    public static final int DEPRECATED_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deprecated_ = "";
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8;</code>
     * @return The deprecated.
     */
    @java.lang.Override
    public java.lang.String getDeprecated() {
      java.lang.Object ref = deprecated_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deprecated_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8;</code>
     * @return The bytes for deprecated.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeprecatedBytes() {
      java.lang.Object ref = deprecated_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private volatile java.lang.Object version_ = "";
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLAG_OPTIONS_FIELD_NUMBER = 10;
    private static final class FlagOptionsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, cosmos.autocli.v1.Options.FlagOptions> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>newDefaultInstance(
                  cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  cosmos.autocli.v1.Options.FlagOptions.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, cosmos.autocli.v1.Options.FlagOptions> flagOptions_;
    private com.google.protobuf.MapField<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
    internalGetFlagOptions() {
      if (flagOptions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FlagOptionsDefaultEntryHolder.defaultEntry);
      }
      return flagOptions_;
    }
    public int getFlagOptionsCount() {
      return internalGetFlagOptions().getMap().size();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    @java.lang.Override
    public boolean containsFlagOptions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetFlagOptions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFlagOptionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> getFlagOptions() {
      return getFlagOptionsMap();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> getFlagOptionsMap() {
      return internalGetFlagOptions().getMap();
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    @java.lang.Override
    public /* nullable */
cosmos.autocli.v1.Options.FlagOptions getFlagOptionsOrDefault(
        java.lang.String key,
        /* nullable */
cosmos.autocli.v1.Options.FlagOptions defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> map =
          internalGetFlagOptions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.FlagOptions getFlagOptionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> map =
          internalGetFlagOptions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int POSITIONAL_ARGS_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<cosmos.autocli.v1.Options.PositionalArgDescriptor> positionalArgs_;
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.autocli.v1.Options.PositionalArgDescriptor> getPositionalArgsList() {
      return positionalArgs_;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder> 
        getPositionalArgsOrBuilderList() {
      return positionalArgs_;
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    @java.lang.Override
    public int getPositionalArgsCount() {
      return positionalArgs_.size();
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.PositionalArgDescriptor getPositionalArgs(int index) {
      return positionalArgs_.get(index);
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
     */
    @java.lang.Override
    public cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder getPositionalArgsOrBuilder(
        int index) {
      return positionalArgs_.get(index);
    }

    public static final int SKIP_FIELD_NUMBER = 12;
    private boolean skip_ = false;
    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12;</code>
     * @return The skip.
     */
    @java.lang.Override
    public boolean getSkip() {
      return skip_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(rpcMethod_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rpcMethod_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(use_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, use_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(long_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, long_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(short_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, short_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(example_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, example_);
      }
      for (int i = 0; i < alias_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, alias_.getRaw(i));
      }
      for (int i = 0; i < suggestFor_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, suggestFor_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, deprecated_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, version_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFlagOptions(),
          FlagOptionsDefaultEntryHolder.defaultEntry,
          10);
      for (int i = 0; i < positionalArgs_.size(); i++) {
        output.writeMessage(11, positionalArgs_.get(i));
      }
      if (skip_ != false) {
        output.writeBool(12, skip_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(rpcMethod_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rpcMethod_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(use_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, use_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(long_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, long_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(short_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, short_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(example_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, example_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alias_.size(); i++) {
          dataSize += computeStringSizeNoTag(alias_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAliasList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < suggestFor_.size(); i++) {
          dataSize += computeStringSizeNoTag(suggestFor_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSuggestForList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, deprecated_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, version_);
      }
      for (java.util.Map.Entry<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> entry
           : internalGetFlagOptions().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
        flagOptions__ = FlagOptionsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, flagOptions__);
      }
      for (int i = 0; i < positionalArgs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, positionalArgs_.get(i));
      }
      if (skip_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, skip_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.autocli.v1.Options.RpcCommandOptions)) {
        return super.equals(obj);
      }
      cosmos.autocli.v1.Options.RpcCommandOptions other = (cosmos.autocli.v1.Options.RpcCommandOptions) obj;

      if (!getRpcMethod()
          .equals(other.getRpcMethod())) return false;
      if (!getUse()
          .equals(other.getUse())) return false;
      if (!getLong()
          .equals(other.getLong())) return false;
      if (!getShort()
          .equals(other.getShort())) return false;
      if (!getExample()
          .equals(other.getExample())) return false;
      if (!getAliasList()
          .equals(other.getAliasList())) return false;
      if (!getSuggestForList()
          .equals(other.getSuggestForList())) return false;
      if (!getDeprecated()
          .equals(other.getDeprecated())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!internalGetFlagOptions().equals(
          other.internalGetFlagOptions())) return false;
      if (!getPositionalArgsList()
          .equals(other.getPositionalArgsList())) return false;
      if (getSkip()
          != other.getSkip()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RPC_METHOD_FIELD_NUMBER;
      hash = (53 * hash) + getRpcMethod().hashCode();
      hash = (37 * hash) + USE_FIELD_NUMBER;
      hash = (53 * hash) + getUse().hashCode();
      hash = (37 * hash) + LONG_FIELD_NUMBER;
      hash = (53 * hash) + getLong().hashCode();
      hash = (37 * hash) + SHORT_FIELD_NUMBER;
      hash = (53 * hash) + getShort().hashCode();
      hash = (37 * hash) + EXAMPLE_FIELD_NUMBER;
      hash = (53 * hash) + getExample().hashCode();
      if (getAliasCount() > 0) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAliasList().hashCode();
      }
      if (getSuggestForCount() > 0) {
        hash = (37 * hash) + SUGGEST_FOR_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestForList().hashCode();
      }
      hash = (37 * hash) + DEPRECATED_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecated().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      if (!internalGetFlagOptions().getMap().isEmpty()) {
        hash = (37 * hash) + FLAG_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFlagOptions().hashCode();
      }
      if (getPositionalArgsCount() > 0) {
        hash = (37 * hash) + POSITIONAL_ARGS_FIELD_NUMBER;
        hash = (53 * hash) + getPositionalArgsList().hashCode();
      }
      hash = (37 * hash) + SKIP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSkip());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.RpcCommandOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.autocli.v1.Options.RpcCommandOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RpcCommandOptions specifies options for commands generated from protobuf
     * rpc methods.
     * </pre>
     *
     * Protobuf type {@code cosmos.autocli.v1.RpcCommandOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.RpcCommandOptions)
        cosmos.autocli.v1.Options.RpcCommandOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetFlagOptions();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutableFlagOptions();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_RpcCommandOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.autocli.v1.Options.RpcCommandOptions.class, cosmos.autocli.v1.Options.RpcCommandOptions.Builder.class);
      }

      // Construct using cosmos.autocli.v1.Options.RpcCommandOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        rpcMethod_ = "";
        use_ = "";
        long_ = "";
        short_ = "";
        example_ = "";
        alias_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        suggestFor_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        deprecated_ = "";
        version_ = "";
        internalGetMutableFlagOptions().clear();
        if (positionalArgsBuilder_ == null) {
          positionalArgs_ = java.util.Collections.emptyList();
        } else {
          positionalArgs_ = null;
          positionalArgsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        skip_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.RpcCommandOptions getDefaultInstanceForType() {
        return cosmos.autocli.v1.Options.RpcCommandOptions.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.RpcCommandOptions build() {
        cosmos.autocli.v1.Options.RpcCommandOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.RpcCommandOptions buildPartial() {
        cosmos.autocli.v1.Options.RpcCommandOptions result = new cosmos.autocli.v1.Options.RpcCommandOptions(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(cosmos.autocli.v1.Options.RpcCommandOptions result) {
        if (positionalArgsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            positionalArgs_ = java.util.Collections.unmodifiableList(positionalArgs_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.positionalArgs_ = positionalArgs_;
        } else {
          result.positionalArgs_ = positionalArgsBuilder_.build();
        }
      }

      private void buildPartial0(cosmos.autocli.v1.Options.RpcCommandOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.rpcMethod_ = rpcMethod_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.use_ = use_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.long_ = long_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.short_ = short_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.example_ = example_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          alias_.makeImmutable();
          result.alias_ = alias_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          suggestFor_.makeImmutable();
          result.suggestFor_ = suggestFor_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.deprecated_ = deprecated_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.version_ = version_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.flagOptions_ = internalGetFlagOptions();
          result.flagOptions_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.skip_ = skip_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.autocli.v1.Options.RpcCommandOptions) {
          return mergeFrom((cosmos.autocli.v1.Options.RpcCommandOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.autocli.v1.Options.RpcCommandOptions other) {
        if (other == cosmos.autocli.v1.Options.RpcCommandOptions.getDefaultInstance()) return this;
        if (!other.getRpcMethod().isEmpty()) {
          rpcMethod_ = other.rpcMethod_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getUse().isEmpty()) {
          use_ = other.use_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getLong().isEmpty()) {
          long_ = other.long_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getShort().isEmpty()) {
          short_ = other.short_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getExample().isEmpty()) {
          example_ = other.example_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.alias_.isEmpty()) {
          if (alias_.isEmpty()) {
            alias_ = other.alias_;
            bitField0_ |= 0x00000020;
          } else {
            ensureAliasIsMutable();
            alias_.addAll(other.alias_);
          }
          onChanged();
        }
        if (!other.suggestFor_.isEmpty()) {
          if (suggestFor_.isEmpty()) {
            suggestFor_ = other.suggestFor_;
            bitField0_ |= 0x00000040;
          } else {
            ensureSuggestForIsMutable();
            suggestFor_.addAll(other.suggestFor_);
          }
          onChanged();
        }
        if (!other.getDeprecated().isEmpty()) {
          deprecated_ = other.deprecated_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          bitField0_ |= 0x00000100;
          onChanged();
        }
        internalGetMutableFlagOptions().mergeFrom(
            other.internalGetFlagOptions());
        bitField0_ |= 0x00000200;
        if (positionalArgsBuilder_ == null) {
          if (!other.positionalArgs_.isEmpty()) {
            if (positionalArgs_.isEmpty()) {
              positionalArgs_ = other.positionalArgs_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensurePositionalArgsIsMutable();
              positionalArgs_.addAll(other.positionalArgs_);
            }
            onChanged();
          }
        } else {
          if (!other.positionalArgs_.isEmpty()) {
            if (positionalArgsBuilder_.isEmpty()) {
              positionalArgsBuilder_.dispose();
              positionalArgsBuilder_ = null;
              positionalArgs_ = other.positionalArgs_;
              bitField0_ = (bitField0_ & ~0x00000400);
              positionalArgsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPositionalArgsFieldBuilder() : null;
            } else {
              positionalArgsBuilder_.addAllMessages(other.positionalArgs_);
            }
          }
        }
        if (other.getSkip() != false) {
          setSkip(other.getSkip());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                rpcMethod_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                use_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                long_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                short_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                example_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureAliasIsMutable();
                alias_.add(s);
                break;
              } // case 50
              case 58: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSuggestForIsMutable();
                suggestFor_.add(s);
                break;
              } // case 58
              case 66: {
                deprecated_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                version_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                com.google.protobuf.MapEntry<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
                flagOptions__ = input.readMessage(
                    FlagOptionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableFlagOptions().getMutableMap().put(
                    flagOptions__.getKey(), flagOptions__.getValue());
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                cosmos.autocli.v1.Options.PositionalArgDescriptor m =
                    input.readMessage(
                        cosmos.autocli.v1.Options.PositionalArgDescriptor.parser(),
                        extensionRegistry);
                if (positionalArgsBuilder_ == null) {
                  ensurePositionalArgsIsMutable();
                  positionalArgs_.add(m);
                } else {
                  positionalArgsBuilder_.addMessage(m);
                }
                break;
              } // case 90
              case 96: {
                skip_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object rpcMethod_ = "";
      /**
       * <pre>
       * rpc_method is short name of the protobuf rpc method that this command is
       * generated from.
       * </pre>
       *
       * <code>string rpc_method = 1;</code>
       * @return The rpcMethod.
       */
      public java.lang.String getRpcMethod() {
        java.lang.Object ref = rpcMethod_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rpcMethod_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * rpc_method is short name of the protobuf rpc method that this command is
       * generated from.
       * </pre>
       *
       * <code>string rpc_method = 1;</code>
       * @return The bytes for rpcMethod.
       */
      public com.google.protobuf.ByteString
          getRpcMethodBytes() {
        java.lang.Object ref = rpcMethod_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rpcMethod_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * rpc_method is short name of the protobuf rpc method that this command is
       * generated from.
       * </pre>
       *
       * <code>string rpc_method = 1;</code>
       * @param value The rpcMethod to set.
       * @return This builder for chaining.
       */
      public Builder setRpcMethod(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        rpcMethod_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * rpc_method is short name of the protobuf rpc method that this command is
       * generated from.
       * </pre>
       *
       * <code>string rpc_method = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRpcMethod() {
        rpcMethod_ = getDefaultInstance().getRpcMethod();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * rpc_method is short name of the protobuf rpc method that this command is
       * generated from.
       * </pre>
       *
       * <code>string rpc_method = 1;</code>
       * @param value The bytes for rpcMethod to set.
       * @return This builder for chaining.
       */
      public Builder setRpcMethodBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        rpcMethod_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object use_ = "";
      /**
       * <pre>
       * use is the one-line usage method. It also allows specifying an alternate
       * name for the command as the first word of the usage text.
       *
       * By default the name of an rpc command is the kebab-case short name of the
       * rpc method.
       * </pre>
       *
       * <code>string use = 2;</code>
       * @return The use.
       */
      public java.lang.String getUse() {
        java.lang.Object ref = use_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          use_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * use is the one-line usage method. It also allows specifying an alternate
       * name for the command as the first word of the usage text.
       *
       * By default the name of an rpc command is the kebab-case short name of the
       * rpc method.
       * </pre>
       *
       * <code>string use = 2;</code>
       * @return The bytes for use.
       */
      public com.google.protobuf.ByteString
          getUseBytes() {
        java.lang.Object ref = use_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          use_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * use is the one-line usage method. It also allows specifying an alternate
       * name for the command as the first word of the usage text.
       *
       * By default the name of an rpc command is the kebab-case short name of the
       * rpc method.
       * </pre>
       *
       * <code>string use = 2;</code>
       * @param value The use to set.
       * @return This builder for chaining.
       */
      public Builder setUse(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        use_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * use is the one-line usage method. It also allows specifying an alternate
       * name for the command as the first word of the usage text.
       *
       * By default the name of an rpc command is the kebab-case short name of the
       * rpc method.
       * </pre>
       *
       * <code>string use = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUse() {
        use_ = getDefaultInstance().getUse();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * use is the one-line usage method. It also allows specifying an alternate
       * name for the command as the first word of the usage text.
       *
       * By default the name of an rpc command is the kebab-case short name of the
       * rpc method.
       * </pre>
       *
       * <code>string use = 2;</code>
       * @param value The bytes for use to set.
       * @return This builder for chaining.
       */
      public Builder setUseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        use_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object long_ = "";
      /**
       * <pre>
       * long is the long message shown in the 'help &lt;this-command&gt;' output.
       * </pre>
       *
       * <code>string long = 3;</code>
       * @return The long.
       */
      public java.lang.String getLong() {
        java.lang.Object ref = long_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          long_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * long is the long message shown in the 'help &lt;this-command&gt;' output.
       * </pre>
       *
       * <code>string long = 3;</code>
       * @return The bytes for long.
       */
      public com.google.protobuf.ByteString
          getLongBytes() {
        java.lang.Object ref = long_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          long_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * long is the long message shown in the 'help &lt;this-command&gt;' output.
       * </pre>
       *
       * <code>string long = 3;</code>
       * @param value The long to set.
       * @return This builder for chaining.
       */
      public Builder setLong(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        long_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * long is the long message shown in the 'help &lt;this-command&gt;' output.
       * </pre>
       *
       * <code>string long = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLong() {
        long_ = getDefaultInstance().getLong();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * long is the long message shown in the 'help &lt;this-command&gt;' output.
       * </pre>
       *
       * <code>string long = 3;</code>
       * @param value The bytes for long to set.
       * @return This builder for chaining.
       */
      public Builder setLongBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        long_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object short_ = "";
      /**
       * <pre>
       * short is the short description shown in the 'help' output.
       * </pre>
       *
       * <code>string short = 4;</code>
       * @return The short.
       */
      public java.lang.String getShort() {
        java.lang.Object ref = short_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          short_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * short is the short description shown in the 'help' output.
       * </pre>
       *
       * <code>string short = 4;</code>
       * @return The bytes for short.
       */
      public com.google.protobuf.ByteString
          getShortBytes() {
        java.lang.Object ref = short_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          short_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * short is the short description shown in the 'help' output.
       * </pre>
       *
       * <code>string short = 4;</code>
       * @param value The short to set.
       * @return This builder for chaining.
       */
      public Builder setShort(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        short_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short is the short description shown in the 'help' output.
       * </pre>
       *
       * <code>string short = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearShort() {
        short_ = getDefaultInstance().getShort();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short is the short description shown in the 'help' output.
       * </pre>
       *
       * <code>string short = 4;</code>
       * @param value The bytes for short to set.
       * @return This builder for chaining.
       */
      public Builder setShortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        short_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object example_ = "";
      /**
       * <pre>
       * example is examples of how to use the command.
       * </pre>
       *
       * <code>string example = 5;</code>
       * @return The example.
       */
      public java.lang.String getExample() {
        java.lang.Object ref = example_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          example_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * example is examples of how to use the command.
       * </pre>
       *
       * <code>string example = 5;</code>
       * @return The bytes for example.
       */
      public com.google.protobuf.ByteString
          getExampleBytes() {
        java.lang.Object ref = example_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          example_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * example is examples of how to use the command.
       * </pre>
       *
       * <code>string example = 5;</code>
       * @param value The example to set.
       * @return This builder for chaining.
       */
      public Builder setExample(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        example_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * example is examples of how to use the command.
       * </pre>
       *
       * <code>string example = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearExample() {
        example_ = getDefaultInstance().getExample();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * example is examples of how to use the command.
       * </pre>
       *
       * <code>string example = 5;</code>
       * @param value The bytes for example to set.
       * @return This builder for chaining.
       */
      public Builder setExampleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        example_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList alias_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureAliasIsMutable() {
        if (!alias_.isModifiable()) {
          alias_ = new com.google.protobuf.LazyStringArrayList(alias_);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @return A list containing the alias.
       */
      public com.google.protobuf.ProtocolStringList
          getAliasList() {
        alias_.makeImmutable();
        return alias_;
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @return The count of alias.
       */
      public int getAliasCount() {
        return alias_.size();
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @param index The index of the element to return.
       * @return The alias at the given index.
       */
      public java.lang.String getAlias(int index) {
        return alias_.get(index);
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @param index The index of the value to return.
       * @return The bytes of the alias at the given index.
       */
      public com.google.protobuf.ByteString
          getAliasBytes(int index) {
        return alias_.getByteString(index);
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @param index The index to set the value at.
       * @param value The alias to set.
       * @return This builder for chaining.
       */
      public Builder setAlias(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAliasIsMutable();
        alias_.set(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @param value The alias to add.
       * @return This builder for chaining.
       */
      public Builder addAlias(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAliasIsMutable();
        alias_.add(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @param values The alias to add.
       * @return This builder for chaining.
       */
      public Builder addAllAlias(
          java.lang.Iterable<java.lang.String> values) {
        ensureAliasIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, alias_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlias() {
        alias_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alias is an array of aliases that can be used instead of the first word in Use.
       * </pre>
       *
       * <code>repeated string alias = 6;</code>
       * @param value The bytes of the alias to add.
       * @return This builder for chaining.
       */
      public Builder addAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureAliasIsMutable();
        alias_.add(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList suggestFor_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureSuggestForIsMutable() {
        if (!suggestFor_.isModifiable()) {
          suggestFor_ = new com.google.protobuf.LazyStringArrayList(suggestFor_);
        }
        bitField0_ |= 0x00000040;
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @return A list containing the suggestFor.
       */
      public com.google.protobuf.ProtocolStringList
          getSuggestForList() {
        suggestFor_.makeImmutable();
        return suggestFor_;
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @return The count of suggestFor.
       */
      public int getSuggestForCount() {
        return suggestFor_.size();
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @param index The index of the element to return.
       * @return The suggestFor at the given index.
       */
      public java.lang.String getSuggestFor(int index) {
        return suggestFor_.get(index);
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the suggestFor at the given index.
       */
      public com.google.protobuf.ByteString
          getSuggestForBytes(int index) {
        return suggestFor_.getByteString(index);
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @param index The index to set the value at.
       * @param value The suggestFor to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestFor(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSuggestForIsMutable();
        suggestFor_.set(index, value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @param value The suggestFor to add.
       * @return This builder for chaining.
       */
      public Builder addSuggestFor(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSuggestForIsMutable();
        suggestFor_.add(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @param values The suggestFor to add.
       * @return This builder for chaining.
       */
      public Builder addAllSuggestFor(
          java.lang.Iterable<java.lang.String> values) {
        ensureSuggestForIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, suggestFor_);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestFor() {
        suggestFor_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * suggest_for is an array of command names for which this command will be suggested -
       * similar to aliases but only suggests.
       * </pre>
       *
       * <code>repeated string suggest_for = 7;</code>
       * @param value The bytes of the suggestFor to add.
       * @return This builder for chaining.
       */
      public Builder addSuggestForBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSuggestForIsMutable();
        suggestFor_.add(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private java.lang.Object deprecated_ = "";
      /**
       * <pre>
       * deprecated defines, if this command is deprecated and should print this string when used.
       * </pre>
       *
       * <code>string deprecated = 8;</code>
       * @return The deprecated.
       */
      public java.lang.String getDeprecated() {
        java.lang.Object ref = deprecated_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deprecated_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * deprecated defines, if this command is deprecated and should print this string when used.
       * </pre>
       *
       * <code>string deprecated = 8;</code>
       * @return The bytes for deprecated.
       */
      public com.google.protobuf.ByteString
          getDeprecatedBytes() {
        java.lang.Object ref = deprecated_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deprecated_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * deprecated defines, if this command is deprecated and should print this string when used.
       * </pre>
       *
       * <code>string deprecated = 8;</code>
       * @param value The deprecated to set.
       * @return This builder for chaining.
       */
      public Builder setDeprecated(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deprecated_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deprecated defines, if this command is deprecated and should print this string when used.
       * </pre>
       *
       * <code>string deprecated = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeprecated() {
        deprecated_ = getDefaultInstance().getDeprecated();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deprecated defines, if this command is deprecated and should print this string when used.
       * </pre>
       *
       * <code>string deprecated = 8;</code>
       * @param value The bytes for deprecated to set.
       * @return This builder for chaining.
       */
      public Builder setDeprecatedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deprecated_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * version defines the version for this command. If this value is non-empty and the command does not
       * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
       * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
       * command does not define one.
       * </pre>
       *
       * <code>string version = 9;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * version defines the version for this command. If this value is non-empty and the command does not
       * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
       * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
       * command does not define one.
       * </pre>
       *
       * <code>string version = 9;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * version defines the version for this command. If this value is non-empty and the command does not
       * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
       * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
       * command does not define one.
       * </pre>
       *
       * <code>string version = 9;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        version_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version defines the version for this command. If this value is non-empty and the command does not
       * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
       * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
       * command does not define one.
       * </pre>
       *
       * <code>string version = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        version_ = getDefaultInstance().getVersion();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version defines the version for this command. If this value is non-empty and the command does not
       * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
       * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
       * command does not define one.
       * </pre>
       *
       * <code>string version = 9;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        version_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, cosmos.autocli.v1.Options.FlagOptions> flagOptions_;
      private com.google.protobuf.MapField<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
          internalGetFlagOptions() {
        if (flagOptions_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FlagOptionsDefaultEntryHolder.defaultEntry);
        }
        return flagOptions_;
      }
      private com.google.protobuf.MapField<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
          internalGetMutableFlagOptions() {
        if (flagOptions_ == null) {
          flagOptions_ = com.google.protobuf.MapField.newMapField(
              FlagOptionsDefaultEntryHolder.defaultEntry);
        }
        if (!flagOptions_.isMutable()) {
          flagOptions_ = flagOptions_.copy();
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return flagOptions_;
      }
      public int getFlagOptionsCount() {
        return internalGetFlagOptions().getMap().size();
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      @java.lang.Override
      public boolean containsFlagOptions(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetFlagOptions().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFlagOptionsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> getFlagOptions() {
        return getFlagOptionsMap();
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> getFlagOptionsMap() {
        return internalGetFlagOptions().getMap();
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      @java.lang.Override
      public /* nullable */
cosmos.autocli.v1.Options.FlagOptions getFlagOptionsOrDefault(
          java.lang.String key,
          /* nullable */
cosmos.autocli.v1.Options.FlagOptions defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> map =
            internalGetFlagOptions().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      @java.lang.Override
      public cosmos.autocli.v1.Options.FlagOptions getFlagOptionsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> map =
            internalGetFlagOptions().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearFlagOptions() {
        bitField0_ = (bitField0_ & ~0x00000200);
        internalGetMutableFlagOptions().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      public Builder removeFlagOptions(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableFlagOptions().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions>
          getMutableFlagOptions() {
        bitField0_ |= 0x00000200;
        return internalGetMutableFlagOptions().getMutableMap();
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      public Builder putFlagOptions(
          java.lang.String key,
          cosmos.autocli.v1.Options.FlagOptions value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableFlagOptions().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * flag_options are options for flags generated from rpc request fields.
       * By default all request fields are configured as flags. They can
       * also be configured as positional args instead using positional_args.
       * </pre>
       *
       * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10;</code>
       */
      public Builder putAllFlagOptions(
          java.util.Map<java.lang.String, cosmos.autocli.v1.Options.FlagOptions> values) {
        internalGetMutableFlagOptions().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000200;
        return this;
      }

      private java.util.List<cosmos.autocli.v1.Options.PositionalArgDescriptor> positionalArgs_ =
        java.util.Collections.emptyList();
      private void ensurePositionalArgsIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          positionalArgs_ = new java.util.ArrayList<cosmos.autocli.v1.Options.PositionalArgDescriptor>(positionalArgs_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.autocli.v1.Options.PositionalArgDescriptor, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder, cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder> positionalArgsBuilder_;

      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public java.util.List<cosmos.autocli.v1.Options.PositionalArgDescriptor> getPositionalArgsList() {
        if (positionalArgsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(positionalArgs_);
        } else {
          return positionalArgsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public int getPositionalArgsCount() {
        if (positionalArgsBuilder_ == null) {
          return positionalArgs_.size();
        } else {
          return positionalArgsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public cosmos.autocli.v1.Options.PositionalArgDescriptor getPositionalArgs(int index) {
        if (positionalArgsBuilder_ == null) {
          return positionalArgs_.get(index);
        } else {
          return positionalArgsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder setPositionalArgs(
          int index, cosmos.autocli.v1.Options.PositionalArgDescriptor value) {
        if (positionalArgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionalArgsIsMutable();
          positionalArgs_.set(index, value);
          onChanged();
        } else {
          positionalArgsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder setPositionalArgs(
          int index, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder builderForValue) {
        if (positionalArgsBuilder_ == null) {
          ensurePositionalArgsIsMutable();
          positionalArgs_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionalArgsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder addPositionalArgs(cosmos.autocli.v1.Options.PositionalArgDescriptor value) {
        if (positionalArgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionalArgsIsMutable();
          positionalArgs_.add(value);
          onChanged();
        } else {
          positionalArgsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder addPositionalArgs(
          int index, cosmos.autocli.v1.Options.PositionalArgDescriptor value) {
        if (positionalArgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionalArgsIsMutable();
          positionalArgs_.add(index, value);
          onChanged();
        } else {
          positionalArgsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder addPositionalArgs(
          cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder builderForValue) {
        if (positionalArgsBuilder_ == null) {
          ensurePositionalArgsIsMutable();
          positionalArgs_.add(builderForValue.build());
          onChanged();
        } else {
          positionalArgsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder addPositionalArgs(
          int index, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder builderForValue) {
        if (positionalArgsBuilder_ == null) {
          ensurePositionalArgsIsMutable();
          positionalArgs_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionalArgsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder addAllPositionalArgs(
          java.lang.Iterable<? extends cosmos.autocli.v1.Options.PositionalArgDescriptor> values) {
        if (positionalArgsBuilder_ == null) {
          ensurePositionalArgsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, positionalArgs_);
          onChanged();
        } else {
          positionalArgsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder clearPositionalArgs() {
        if (positionalArgsBuilder_ == null) {
          positionalArgs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          positionalArgsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public Builder removePositionalArgs(int index) {
        if (positionalArgsBuilder_ == null) {
          ensurePositionalArgsIsMutable();
          positionalArgs_.remove(index);
          onChanged();
        } else {
          positionalArgsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder getPositionalArgsBuilder(
          int index) {
        return getPositionalArgsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder getPositionalArgsOrBuilder(
          int index) {
        if (positionalArgsBuilder_ == null) {
          return positionalArgs_.get(index);  } else {
          return positionalArgsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public java.util.List<? extends cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder> 
           getPositionalArgsOrBuilderList() {
        if (positionalArgsBuilder_ != null) {
          return positionalArgsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(positionalArgs_);
        }
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder addPositionalArgsBuilder() {
        return getPositionalArgsFieldBuilder().addBuilder(
            cosmos.autocli.v1.Options.PositionalArgDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder addPositionalArgsBuilder(
          int index) {
        return getPositionalArgsFieldBuilder().addBuilder(
            index, cosmos.autocli.v1.Options.PositionalArgDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * positional_args specifies positional arguments for the command.
       * </pre>
       *
       * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11;</code>
       */
      public java.util.List<cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder> 
           getPositionalArgsBuilderList() {
        return getPositionalArgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.autocli.v1.Options.PositionalArgDescriptor, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder, cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder> 
          getPositionalArgsFieldBuilder() {
        if (positionalArgsBuilder_ == null) {
          positionalArgsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.autocli.v1.Options.PositionalArgDescriptor, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder, cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder>(
                  positionalArgs_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          positionalArgs_ = null;
        }
        return positionalArgsBuilder_;
      }

      private boolean skip_ ;
      /**
       * <pre>
       * skip specifies whether to skip this rpc method when generating commands.
       * </pre>
       *
       * <code>bool skip = 12;</code>
       * @return The skip.
       */
      @java.lang.Override
      public boolean getSkip() {
        return skip_;
      }
      /**
       * <pre>
       * skip specifies whether to skip this rpc method when generating commands.
       * </pre>
       *
       * <code>bool skip = 12;</code>
       * @param value The skip to set.
       * @return This builder for chaining.
       */
      public Builder setSkip(boolean value) {

        skip_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * skip specifies whether to skip this rpc method when generating commands.
       * </pre>
       *
       * <code>bool skip = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkip() {
        bitField0_ = (bitField0_ & ~0x00000800);
        skip_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.RpcCommandOptions)
    }

    // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.RpcCommandOptions)
    private static final cosmos.autocli.v1.Options.RpcCommandOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.autocli.v1.Options.RpcCommandOptions();
    }

    public static cosmos.autocli.v1.Options.RpcCommandOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcCommandOptions>
        PARSER = new com.google.protobuf.AbstractParser<RpcCommandOptions>() {
      @java.lang.Override
      public RpcCommandOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RpcCommandOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RpcCommandOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.autocli.v1.Options.RpcCommandOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlagOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.autocli.v1.FlagOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2;</code>
     * @return The shorthand.
     */
    java.lang.String getShorthand();
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2;</code>
     * @return The bytes for shorthand.
     */
    com.google.protobuf.ByteString
        getShorthandBytes();

    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3;</code>
     * @return The usage.
     */
    java.lang.String getUsage();
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3;</code>
     * @return The bytes for usage.
     */
    com.google.protobuf.ByteString
        getUsageBytes();

    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4;</code>
     * @return The defaultValue.
     */
    java.lang.String getDefaultValue();
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4;</code>
     * @return The bytes for defaultValue.
     */
    com.google.protobuf.ByteString
        getDefaultValueBytes();

    /**
     * <pre>
     * default value is the default value as text if the flag is used without any value.
     * </pre>
     *
     * <code>string no_opt_default_value = 5;</code>
     * @return The noOptDefaultValue.
     */
    java.lang.String getNoOptDefaultValue();
    /**
     * <pre>
     * default value is the default value as text if the flag is used without any value.
     * </pre>
     *
     * <code>string no_opt_default_value = 5;</code>
     * @return The bytes for noOptDefaultValue.
     */
    com.google.protobuf.ByteString
        getNoOptDefaultValueBytes();

    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6;</code>
     * @return The deprecated.
     */
    java.lang.String getDeprecated();
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6;</code>
     * @return The bytes for deprecated.
     */
    com.google.protobuf.ByteString
        getDeprecatedBytes();

    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7;</code>
     * @return The shorthandDeprecated.
     */
    java.lang.String getShorthandDeprecated();
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7;</code>
     * @return The bytes for shorthandDeprecated.
     */
    com.google.protobuf.ByteString
        getShorthandDeprecatedBytes();

    /**
     * <pre>
     * hidden hides the flag from help/usage text
     * </pre>
     *
     * <code>bool hidden = 8;</code>
     * @return The hidden.
     */
    boolean getHidden();
  }
  /**
   * <pre>
   * FlagOptions are options for flags generated from rpc request fields.
   * By default, all request fields are configured as flags based on the
   * kebab-case name of the field. Fields can be turned into positional arguments
   * instead by using RpcCommandOptions.positional_args.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.FlagOptions}
   */
  public static final class FlagOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.FlagOptions)
      FlagOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlagOptions.newBuilder() to construct.
    private FlagOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlagOptions() {
      name_ = "";
      shorthand_ = "";
      usage_ = "";
      defaultValue_ = "";
      noOptDefaultValue_ = "";
      deprecated_ = "";
      shorthandDeprecated_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlagOptions();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_FlagOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.autocli.v1.Options.FlagOptions.class, cosmos.autocli.v1.Options.FlagOptions.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name is an alternate name to use for the field flag.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHORTHAND_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object shorthand_ = "";
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2;</code>
     * @return The shorthand.
     */
    @java.lang.Override
    public java.lang.String getShorthand() {
      java.lang.Object ref = shorthand_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shorthand_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * shorthand is a one-letter abbreviated flag.
     * </pre>
     *
     * <code>string shorthand = 2;</code>
     * @return The bytes for shorthand.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShorthandBytes() {
      java.lang.Object ref = shorthand_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shorthand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USAGE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object usage_ = "";
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3;</code>
     * @return The usage.
     */
    @java.lang.Override
    public java.lang.String getUsage() {
      java.lang.Object ref = usage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        usage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * usage is the help message.
     * </pre>
     *
     * <code>string usage = 3;</code>
     * @return The bytes for usage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUsageBytes() {
      java.lang.Object ref = usage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        usage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULT_VALUE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object defaultValue_ = "";
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4;</code>
     * @return The defaultValue.
     */
    @java.lang.Override
    public java.lang.String getDefaultValue() {
      java.lang.Object ref = defaultValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultValue_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * default_value is the default value as text.
     * </pre>
     *
     * <code>string default_value = 4;</code>
     * @return The bytes for defaultValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDefaultValueBytes() {
      java.lang.Object ref = defaultValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NO_OPT_DEFAULT_VALUE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object noOptDefaultValue_ = "";
    /**
     * <pre>
     * default value is the default value as text if the flag is used without any value.
     * </pre>
     *
     * <code>string no_opt_default_value = 5;</code>
     * @return The noOptDefaultValue.
     */
    @java.lang.Override
    public java.lang.String getNoOptDefaultValue() {
      java.lang.Object ref = noOptDefaultValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        noOptDefaultValue_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * default value is the default value as text if the flag is used without any value.
     * </pre>
     *
     * <code>string no_opt_default_value = 5;</code>
     * @return The bytes for noOptDefaultValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNoOptDefaultValueBytes() {
      java.lang.Object ref = noOptDefaultValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        noOptDefaultValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEPRECATED_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deprecated_ = "";
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6;</code>
     * @return The deprecated.
     */
    @java.lang.Override
    public java.lang.String getDeprecated() {
      java.lang.Object ref = deprecated_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deprecated_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * deprecated is the usage text to show if this flag is deprecated.
     * </pre>
     *
     * <code>string deprecated = 6;</code>
     * @return The bytes for deprecated.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeprecatedBytes() {
      java.lang.Object ref = deprecated_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHORTHAND_DEPRECATED_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object shorthandDeprecated_ = "";
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7;</code>
     * @return The shorthandDeprecated.
     */
    @java.lang.Override
    public java.lang.String getShorthandDeprecated() {
      java.lang.Object ref = shorthandDeprecated_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shorthandDeprecated_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
     * </pre>
     *
     * <code>string shorthand_deprecated = 7;</code>
     * @return The bytes for shorthandDeprecated.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShorthandDeprecatedBytes() {
      java.lang.Object ref = shorthandDeprecated_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shorthandDeprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HIDDEN_FIELD_NUMBER = 8;
    private boolean hidden_ = false;
    /**
     * <pre>
     * hidden hides the flag from help/usage text
     * </pre>
     *
     * <code>bool hidden = 8;</code>
     * @return The hidden.
     */
    @java.lang.Override
    public boolean getHidden() {
      return hidden_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthand_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, shorthand_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(usage_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, usage_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, defaultValue_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(noOptDefaultValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, noOptDefaultValue_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, deprecated_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthandDeprecated_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, shorthandDeprecated_);
      }
      if (hidden_ != false) {
        output.writeBool(8, hidden_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthand_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, shorthand_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(usage_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, usage_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, defaultValue_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(noOptDefaultValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, noOptDefaultValue_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deprecated_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, deprecated_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shorthandDeprecated_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, shorthandDeprecated_);
      }
      if (hidden_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, hidden_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.autocli.v1.Options.FlagOptions)) {
        return super.equals(obj);
      }
      cosmos.autocli.v1.Options.FlagOptions other = (cosmos.autocli.v1.Options.FlagOptions) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getShorthand()
          .equals(other.getShorthand())) return false;
      if (!getUsage()
          .equals(other.getUsage())) return false;
      if (!getDefaultValue()
          .equals(other.getDefaultValue())) return false;
      if (!getNoOptDefaultValue()
          .equals(other.getNoOptDefaultValue())) return false;
      if (!getDeprecated()
          .equals(other.getDeprecated())) return false;
      if (!getShorthandDeprecated()
          .equals(other.getShorthandDeprecated())) return false;
      if (getHidden()
          != other.getHidden()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SHORTHAND_FIELD_NUMBER;
      hash = (53 * hash) + getShorthand().hashCode();
      hash = (37 * hash) + USAGE_FIELD_NUMBER;
      hash = (53 * hash) + getUsage().hashCode();
      hash = (37 * hash) + DEFAULT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultValue().hashCode();
      hash = (37 * hash) + NO_OPT_DEFAULT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getNoOptDefaultValue().hashCode();
      hash = (37 * hash) + DEPRECATED_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecated().hashCode();
      hash = (37 * hash) + SHORTHAND_DEPRECATED_FIELD_NUMBER;
      hash = (53 * hash) + getShorthandDeprecated().hashCode();
      hash = (37 * hash) + HIDDEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHidden());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.FlagOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.autocli.v1.Options.FlagOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FlagOptions are options for flags generated from rpc request fields.
     * By default, all request fields are configured as flags based on the
     * kebab-case name of the field. Fields can be turned into positional arguments
     * instead by using RpcCommandOptions.positional_args.
     * </pre>
     *
     * Protobuf type {@code cosmos.autocli.v1.FlagOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.FlagOptions)
        cosmos.autocli.v1.Options.FlagOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_FlagOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.autocli.v1.Options.FlagOptions.class, cosmos.autocli.v1.Options.FlagOptions.Builder.class);
      }

      // Construct using cosmos.autocli.v1.Options.FlagOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        shorthand_ = "";
        usage_ = "";
        defaultValue_ = "";
        noOptDefaultValue_ = "";
        deprecated_ = "";
        shorthandDeprecated_ = "";
        hidden_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.FlagOptions getDefaultInstanceForType() {
        return cosmos.autocli.v1.Options.FlagOptions.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.FlagOptions build() {
        cosmos.autocli.v1.Options.FlagOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.FlagOptions buildPartial() {
        cosmos.autocli.v1.Options.FlagOptions result = new cosmos.autocli.v1.Options.FlagOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cosmos.autocli.v1.Options.FlagOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.shorthand_ = shorthand_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.usage_ = usage_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.defaultValue_ = defaultValue_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.noOptDefaultValue_ = noOptDefaultValue_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.deprecated_ = deprecated_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.shorthandDeprecated_ = shorthandDeprecated_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.hidden_ = hidden_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.autocli.v1.Options.FlagOptions) {
          return mergeFrom((cosmos.autocli.v1.Options.FlagOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.autocli.v1.Options.FlagOptions other) {
        if (other == cosmos.autocli.v1.Options.FlagOptions.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getShorthand().isEmpty()) {
          shorthand_ = other.shorthand_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getUsage().isEmpty()) {
          usage_ = other.usage_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getDefaultValue().isEmpty()) {
          defaultValue_ = other.defaultValue_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getNoOptDefaultValue().isEmpty()) {
          noOptDefaultValue_ = other.noOptDefaultValue_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.getDeprecated().isEmpty()) {
          deprecated_ = other.deprecated_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (!other.getShorthandDeprecated().isEmpty()) {
          shorthandDeprecated_ = other.shorthandDeprecated_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.getHidden() != false) {
          setHidden(other.getHidden());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                shorthand_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                usage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                defaultValue_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                noOptDefaultValue_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                deprecated_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                shorthandDeprecated_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 64: {
                hidden_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name is an alternate name to use for the field flag.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name is an alternate name to use for the field flag.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name is an alternate name to use for the field flag.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is an alternate name to use for the field flag.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is an alternate name to use for the field flag.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object shorthand_ = "";
      /**
       * <pre>
       * shorthand is a one-letter abbreviated flag.
       * </pre>
       *
       * <code>string shorthand = 2;</code>
       * @return The shorthand.
       */
      public java.lang.String getShorthand() {
        java.lang.Object ref = shorthand_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shorthand_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * shorthand is a one-letter abbreviated flag.
       * </pre>
       *
       * <code>string shorthand = 2;</code>
       * @return The bytes for shorthand.
       */
      public com.google.protobuf.ByteString
          getShorthandBytes() {
        java.lang.Object ref = shorthand_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shorthand_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * shorthand is a one-letter abbreviated flag.
       * </pre>
       *
       * <code>string shorthand = 2;</code>
       * @param value The shorthand to set.
       * @return This builder for chaining.
       */
      public Builder setShorthand(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        shorthand_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shorthand is a one-letter abbreviated flag.
       * </pre>
       *
       * <code>string shorthand = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearShorthand() {
        shorthand_ = getDefaultInstance().getShorthand();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shorthand is a one-letter abbreviated flag.
       * </pre>
       *
       * <code>string shorthand = 2;</code>
       * @param value The bytes for shorthand to set.
       * @return This builder for chaining.
       */
      public Builder setShorthandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        shorthand_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object usage_ = "";
      /**
       * <pre>
       * usage is the help message.
       * </pre>
       *
       * <code>string usage = 3;</code>
       * @return The usage.
       */
      public java.lang.String getUsage() {
        java.lang.Object ref = usage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          usage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * usage is the help message.
       * </pre>
       *
       * <code>string usage = 3;</code>
       * @return The bytes for usage.
       */
      public com.google.protobuf.ByteString
          getUsageBytes() {
        java.lang.Object ref = usage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          usage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * usage is the help message.
       * </pre>
       *
       * <code>string usage = 3;</code>
       * @param value The usage to set.
       * @return This builder for chaining.
       */
      public Builder setUsage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        usage_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * usage is the help message.
       * </pre>
       *
       * <code>string usage = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsage() {
        usage_ = getDefaultInstance().getUsage();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * usage is the help message.
       * </pre>
       *
       * <code>string usage = 3;</code>
       * @param value The bytes for usage to set.
       * @return This builder for chaining.
       */
      public Builder setUsageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        usage_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object defaultValue_ = "";
      /**
       * <pre>
       * default_value is the default value as text.
       * </pre>
       *
       * <code>string default_value = 4;</code>
       * @return The defaultValue.
       */
      public java.lang.String getDefaultValue() {
        java.lang.Object ref = defaultValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          defaultValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * default_value is the default value as text.
       * </pre>
       *
       * <code>string default_value = 4;</code>
       * @return The bytes for defaultValue.
       */
      public com.google.protobuf.ByteString
          getDefaultValueBytes() {
        java.lang.Object ref = defaultValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * default_value is the default value as text.
       * </pre>
       *
       * <code>string default_value = 4;</code>
       * @param value The defaultValue to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        defaultValue_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default_value is the default value as text.
       * </pre>
       *
       * <code>string default_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultValue() {
        defaultValue_ = getDefaultInstance().getDefaultValue();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default_value is the default value as text.
       * </pre>
       *
       * <code>string default_value = 4;</code>
       * @param value The bytes for defaultValue to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        defaultValue_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object noOptDefaultValue_ = "";
      /**
       * <pre>
       * default value is the default value as text if the flag is used without any value.
       * </pre>
       *
       * <code>string no_opt_default_value = 5;</code>
       * @return The noOptDefaultValue.
       */
      public java.lang.String getNoOptDefaultValue() {
        java.lang.Object ref = noOptDefaultValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          noOptDefaultValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * default value is the default value as text if the flag is used without any value.
       * </pre>
       *
       * <code>string no_opt_default_value = 5;</code>
       * @return The bytes for noOptDefaultValue.
       */
      public com.google.protobuf.ByteString
          getNoOptDefaultValueBytes() {
        java.lang.Object ref = noOptDefaultValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          noOptDefaultValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * default value is the default value as text if the flag is used without any value.
       * </pre>
       *
       * <code>string no_opt_default_value = 5;</code>
       * @param value The noOptDefaultValue to set.
       * @return This builder for chaining.
       */
      public Builder setNoOptDefaultValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        noOptDefaultValue_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default value is the default value as text if the flag is used without any value.
       * </pre>
       *
       * <code>string no_opt_default_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNoOptDefaultValue() {
        noOptDefaultValue_ = getDefaultInstance().getNoOptDefaultValue();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default value is the default value as text if the flag is used without any value.
       * </pre>
       *
       * <code>string no_opt_default_value = 5;</code>
       * @param value The bytes for noOptDefaultValue to set.
       * @return This builder for chaining.
       */
      public Builder setNoOptDefaultValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        noOptDefaultValue_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.lang.Object deprecated_ = "";
      /**
       * <pre>
       * deprecated is the usage text to show if this flag is deprecated.
       * </pre>
       *
       * <code>string deprecated = 6;</code>
       * @return The deprecated.
       */
      public java.lang.String getDeprecated() {
        java.lang.Object ref = deprecated_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deprecated_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * deprecated is the usage text to show if this flag is deprecated.
       * </pre>
       *
       * <code>string deprecated = 6;</code>
       * @return The bytes for deprecated.
       */
      public com.google.protobuf.ByteString
          getDeprecatedBytes() {
        java.lang.Object ref = deprecated_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deprecated_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * deprecated is the usage text to show if this flag is deprecated.
       * </pre>
       *
       * <code>string deprecated = 6;</code>
       * @param value The deprecated to set.
       * @return This builder for chaining.
       */
      public Builder setDeprecated(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deprecated_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deprecated is the usage text to show if this flag is deprecated.
       * </pre>
       *
       * <code>string deprecated = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeprecated() {
        deprecated_ = getDefaultInstance().getDeprecated();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deprecated is the usage text to show if this flag is deprecated.
       * </pre>
       *
       * <code>string deprecated = 6;</code>
       * @param value The bytes for deprecated to set.
       * @return This builder for chaining.
       */
      public Builder setDeprecatedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deprecated_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private java.lang.Object shorthandDeprecated_ = "";
      /**
       * <pre>
       * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
       * </pre>
       *
       * <code>string shorthand_deprecated = 7;</code>
       * @return The shorthandDeprecated.
       */
      public java.lang.String getShorthandDeprecated() {
        java.lang.Object ref = shorthandDeprecated_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shorthandDeprecated_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
       * </pre>
       *
       * <code>string shorthand_deprecated = 7;</code>
       * @return The bytes for shorthandDeprecated.
       */
      public com.google.protobuf.ByteString
          getShorthandDeprecatedBytes() {
        java.lang.Object ref = shorthandDeprecated_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shorthandDeprecated_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
       * </pre>
       *
       * <code>string shorthand_deprecated = 7;</code>
       * @param value The shorthandDeprecated to set.
       * @return This builder for chaining.
       */
      public Builder setShorthandDeprecated(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        shorthandDeprecated_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
       * </pre>
       *
       * <code>string shorthand_deprecated = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearShorthandDeprecated() {
        shorthandDeprecated_ = getDefaultInstance().getShorthandDeprecated();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
       * </pre>
       *
       * <code>string shorthand_deprecated = 7;</code>
       * @param value The bytes for shorthandDeprecated to set.
       * @return This builder for chaining.
       */
      public Builder setShorthandDeprecatedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        shorthandDeprecated_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private boolean hidden_ ;
      /**
       * <pre>
       * hidden hides the flag from help/usage text
       * </pre>
       *
       * <code>bool hidden = 8;</code>
       * @return The hidden.
       */
      @java.lang.Override
      public boolean getHidden() {
        return hidden_;
      }
      /**
       * <pre>
       * hidden hides the flag from help/usage text
       * </pre>
       *
       * <code>bool hidden = 8;</code>
       * @param value The hidden to set.
       * @return This builder for chaining.
       */
      public Builder setHidden(boolean value) {

        hidden_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hidden hides the flag from help/usage text
       * </pre>
       *
       * <code>bool hidden = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHidden() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hidden_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.FlagOptions)
    }

    // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.FlagOptions)
    private static final cosmos.autocli.v1.Options.FlagOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.autocli.v1.Options.FlagOptions();
    }

    public static cosmos.autocli.v1.Options.FlagOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlagOptions>
        PARSER = new com.google.protobuf.AbstractParser<FlagOptions>() {
      @java.lang.Override
      public FlagOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FlagOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlagOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.autocli.v1.Options.FlagOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PositionalArgDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.autocli.v1.PositionalArgDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * proto_field specifies the proto field to use as the positional arg. Any
     * fields used as positional args will not have a flag generated.
     * </pre>
     *
     * <code>string proto_field = 1;</code>
     * @return The protoField.
     */
    java.lang.String getProtoField();
    /**
     * <pre>
     * proto_field specifies the proto field to use as the positional arg. Any
     * fields used as positional args will not have a flag generated.
     * </pre>
     *
     * <code>string proto_field = 1;</code>
     * @return The bytes for protoField.
     */
    com.google.protobuf.ByteString
        getProtoFieldBytes();

    /**
     * <pre>
     * varargs makes a positional parameter a varargs parameter. This can only be
     * applied to last positional parameter and the proto_field must a repeated
     * field.
     * </pre>
     *
     * <code>bool varargs = 2;</code>
     * @return The varargs.
     */
    boolean getVarargs();
  }
  /**
   * <pre>
   * PositionalArgDescriptor describes a positional argument.
   * </pre>
   *
   * Protobuf type {@code cosmos.autocli.v1.PositionalArgDescriptor}
   */
  public static final class PositionalArgDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.autocli.v1.PositionalArgDescriptor)
      PositionalArgDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PositionalArgDescriptor.newBuilder() to construct.
    private PositionalArgDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PositionalArgDescriptor() {
      protoField_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PositionalArgDescriptor();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_PositionalArgDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_PositionalArgDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.autocli.v1.Options.PositionalArgDescriptor.class, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder.class);
    }

    public static final int PROTO_FIELD_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object protoField_ = "";
    /**
     * <pre>
     * proto_field specifies the proto field to use as the positional arg. Any
     * fields used as positional args will not have a flag generated.
     * </pre>
     *
     * <code>string proto_field = 1;</code>
     * @return The protoField.
     */
    @java.lang.Override
    public java.lang.String getProtoField() {
      java.lang.Object ref = protoField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protoField_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * proto_field specifies the proto field to use as the positional arg. Any
     * fields used as positional args will not have a flag generated.
     * </pre>
     *
     * <code>string proto_field = 1;</code>
     * @return The bytes for protoField.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtoFieldBytes() {
      java.lang.Object ref = protoField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protoField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARARGS_FIELD_NUMBER = 2;
    private boolean varargs_ = false;
    /**
     * <pre>
     * varargs makes a positional parameter a varargs parameter. This can only be
     * applied to last positional parameter and the proto_field must a repeated
     * field.
     * </pre>
     *
     * <code>bool varargs = 2;</code>
     * @return The varargs.
     */
    @java.lang.Override
    public boolean getVarargs() {
      return varargs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(protoField_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, protoField_);
      }
      if (varargs_ != false) {
        output.writeBool(2, varargs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(protoField_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, protoField_);
      }
      if (varargs_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, varargs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.autocli.v1.Options.PositionalArgDescriptor)) {
        return super.equals(obj);
      }
      cosmos.autocli.v1.Options.PositionalArgDescriptor other = (cosmos.autocli.v1.Options.PositionalArgDescriptor) obj;

      if (!getProtoField()
          .equals(other.getProtoField())) return false;
      if (getVarargs()
          != other.getVarargs()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROTO_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getProtoField().hashCode();
      hash = (37 * hash) + VARARGS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getVarargs());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.autocli.v1.Options.PositionalArgDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.autocli.v1.Options.PositionalArgDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PositionalArgDescriptor describes a positional argument.
     * </pre>
     *
     * Protobuf type {@code cosmos.autocli.v1.PositionalArgDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.autocli.v1.PositionalArgDescriptor)
        cosmos.autocli.v1.Options.PositionalArgDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_PositionalArgDescriptor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_PositionalArgDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.autocli.v1.Options.PositionalArgDescriptor.class, cosmos.autocli.v1.Options.PositionalArgDescriptor.Builder.class);
      }

      // Construct using cosmos.autocli.v1.Options.PositionalArgDescriptor.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        protoField_ = "";
        varargs_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.autocli.v1.Options.internal_static_cosmos_autocli_v1_PositionalArgDescriptor_descriptor;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.PositionalArgDescriptor getDefaultInstanceForType() {
        return cosmos.autocli.v1.Options.PositionalArgDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.PositionalArgDescriptor build() {
        cosmos.autocli.v1.Options.PositionalArgDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.autocli.v1.Options.PositionalArgDescriptor buildPartial() {
        cosmos.autocli.v1.Options.PositionalArgDescriptor result = new cosmos.autocli.v1.Options.PositionalArgDescriptor(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cosmos.autocli.v1.Options.PositionalArgDescriptor result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.protoField_ = protoField_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.varargs_ = varargs_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.autocli.v1.Options.PositionalArgDescriptor) {
          return mergeFrom((cosmos.autocli.v1.Options.PositionalArgDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.autocli.v1.Options.PositionalArgDescriptor other) {
        if (other == cosmos.autocli.v1.Options.PositionalArgDescriptor.getDefaultInstance()) return this;
        if (!other.getProtoField().isEmpty()) {
          protoField_ = other.protoField_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getVarargs() != false) {
          setVarargs(other.getVarargs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                protoField_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                varargs_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object protoField_ = "";
      /**
       * <pre>
       * proto_field specifies the proto field to use as the positional arg. Any
       * fields used as positional args will not have a flag generated.
       * </pre>
       *
       * <code>string proto_field = 1;</code>
       * @return The protoField.
       */
      public java.lang.String getProtoField() {
        java.lang.Object ref = protoField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          protoField_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * proto_field specifies the proto field to use as the positional arg. Any
       * fields used as positional args will not have a flag generated.
       * </pre>
       *
       * <code>string proto_field = 1;</code>
       * @return The bytes for protoField.
       */
      public com.google.protobuf.ByteString
          getProtoFieldBytes() {
        java.lang.Object ref = protoField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protoField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * proto_field specifies the proto field to use as the positional arg. Any
       * fields used as positional args will not have a flag generated.
       * </pre>
       *
       * <code>string proto_field = 1;</code>
       * @param value The protoField to set.
       * @return This builder for chaining.
       */
      public Builder setProtoField(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        protoField_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proto_field specifies the proto field to use as the positional arg. Any
       * fields used as positional args will not have a flag generated.
       * </pre>
       *
       * <code>string proto_field = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProtoField() {
        protoField_ = getDefaultInstance().getProtoField();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proto_field specifies the proto field to use as the positional arg. Any
       * fields used as positional args will not have a flag generated.
       * </pre>
       *
       * <code>string proto_field = 1;</code>
       * @param value The bytes for protoField to set.
       * @return This builder for chaining.
       */
      public Builder setProtoFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        protoField_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean varargs_ ;
      /**
       * <pre>
       * varargs makes a positional parameter a varargs parameter. This can only be
       * applied to last positional parameter and the proto_field must a repeated
       * field.
       * </pre>
       *
       * <code>bool varargs = 2;</code>
       * @return The varargs.
       */
      @java.lang.Override
      public boolean getVarargs() {
        return varargs_;
      }
      /**
       * <pre>
       * varargs makes a positional parameter a varargs parameter. This can only be
       * applied to last positional parameter and the proto_field must a repeated
       * field.
       * </pre>
       *
       * <code>bool varargs = 2;</code>
       * @param value The varargs to set.
       * @return This builder for chaining.
       */
      public Builder setVarargs(boolean value) {

        varargs_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * varargs makes a positional parameter a varargs parameter. This can only be
       * applied to last positional parameter and the proto_field must a repeated
       * field.
       * </pre>
       *
       * <code>bool varargs = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarargs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        varargs_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.autocli.v1.PositionalArgDescriptor)
    }

    // @@protoc_insertion_point(class_scope:cosmos.autocli.v1.PositionalArgDescriptor)
    private static final cosmos.autocli.v1.Options.PositionalArgDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.autocli.v1.Options.PositionalArgDescriptor();
    }

    public static cosmos.autocli.v1.Options.PositionalArgDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PositionalArgDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<PositionalArgDescriptor>() {
      @java.lang.Override
      public PositionalArgDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PositionalArgDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PositionalArgDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.autocli.v1.Options.PositionalArgDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_ModuleOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_ModuleOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_SubCommandsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_SubCommandsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_RpcCommandOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_FlagOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_FlagOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_autocli_v1_PositionalArgDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_autocli_v1_PositionalArgDescriptor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037cosmos/autocli/v1/options.proto\022\021cosmo" +
      "s.autocli.v1\"\204\001\n\rModuleOptions\0227\n\002tx\030\001 \001" +
      "(\0132+.cosmos.autocli.v1.ServiceCommandDes" +
      "criptor\022:\n\005query\030\002 \001(\0132+.cosmos.autocli." +
      "v1.ServiceCommandDescriptor\"\243\002\n\030ServiceC" +
      "ommandDescriptor\022\017\n\007service\030\001 \001(\t\022A\n\023rpc" +
      "_command_options\030\002 \003(\0132$.cosmos.autocli." +
      "v1.RpcCommandOptions\022R\n\014sub_commands\030\003 \003" +
      "(\0132<.cosmos.autocli.v1.ServiceCommandDes" +
      "criptor.SubCommandsEntry\032_\n\020SubCommandsE" +
      "ntry\022\013\n\003key\030\001 \001(\t\022:\n\005value\030\002 \001(\0132+.cosmo" +
      "s.autocli.v1.ServiceCommandDescriptor:\0028" +
      "\001\"\237\003\n\021RpcCommandOptions\022\022\n\nrpc_method\030\001 " +
      "\001(\t\022\013\n\003use\030\002 \001(\t\022\014\n\004long\030\003 \001(\t\022\r\n\005short\030" +
      "\004 \001(\t\022\017\n\007example\030\005 \001(\t\022\r\n\005alias\030\006 \003(\t\022\023\n" +
      "\013suggest_for\030\007 \003(\t\022\022\n\ndeprecated\030\010 \001(\t\022\017" +
      "\n\007version\030\t \001(\t\022K\n\014flag_options\030\n \003(\01325." +
      "cosmos.autocli.v1.RpcCommandOptions.Flag" +
      "OptionsEntry\022C\n\017positional_args\030\013 \003(\0132*." +
      "cosmos.autocli.v1.PositionalArgDescripto" +
      "r\022\014\n\004skip\030\014 \001(\010\032R\n\020FlagOptionsEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.cosmos.autocli" +
      ".v1.FlagOptions:\0028\001\"\264\001\n\013FlagOptions\022\014\n\004n" +
      "ame\030\001 \001(\t\022\021\n\tshorthand\030\002 \001(\t\022\r\n\005usage\030\003 " +
      "\001(\t\022\025\n\rdefault_value\030\004 \001(\t\022\034\n\024no_opt_def" +
      "ault_value\030\005 \001(\t\022\022\n\ndeprecated\030\006 \001(\t\022\034\n\024" +
      "shorthand_deprecated\030\007 \001(\t\022\016\n\006hidden\030\010 \001" +
      "(\010\"?\n\027PositionalArgDescriptor\022\023\n\013proto_f" +
      "ield\030\001 \001(\t\022\017\n\007varargs\030\002 \001(\010B+Z)cosmossdk" +
      ".io/api/cosmos/base/cli/v1;cliv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_cosmos_autocli_v1_ModuleOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_autocli_v1_ModuleOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_ModuleOptions_descriptor,
        new java.lang.String[] { "Tx", "Query", });
    internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor,
        new java.lang.String[] { "Service", "RpcCommandOptions", "SubCommands", });
    internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_SubCommandsEntry_descriptor =
      internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_descriptor.getNestedTypes().get(0);
    internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_SubCommandsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_ServiceCommandDescriptor_SubCommandsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cosmos_autocli_v1_RpcCommandOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor,
        new java.lang.String[] { "RpcMethod", "Use", "Long", "Short", "Example", "Alias", "SuggestFor", "Deprecated", "Version", "FlagOptions", "PositionalArgs", "Skip", });
    internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_descriptor =
      internal_static_cosmos_autocli_v1_RpcCommandOptions_descriptor.getNestedTypes().get(0);
    internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_RpcCommandOptions_FlagOptionsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_cosmos_autocli_v1_FlagOptions_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_cosmos_autocli_v1_FlagOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_FlagOptions_descriptor,
        new java.lang.String[] { "Name", "Shorthand", "Usage", "DefaultValue", "NoOptDefaultValue", "Deprecated", "ShorthandDeprecated", "Hidden", });
    internal_static_cosmos_autocli_v1_PositionalArgDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_cosmos_autocli_v1_PositionalArgDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_autocli_v1_PositionalArgDescriptor_descriptor,
        new java.lang.String[] { "ProtoField", "Varargs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
