// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/feegrant/v1beta1/feegrant.proto

package cosmos.feegrant.v1beta1;

public final class Feegrant {
  private Feegrant() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BasicAllowanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.BasicAllowance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getSpendLimitList();
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getSpendLimit(int index);
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    int getSpendLimitCount();
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getSpendLimitOrBuilderList();
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getSpendLimitOrBuilder(
        int index);

    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return Whether the expiration field is set.
     */
    boolean hasExpiration();
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return The expiration.
     */
    com.google.protobuf.Timestamp getExpiration();
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder();
  }
  /**
   * <pre>
   * BasicAllowance implements Allowance with a one-time grant of coins
   * that optionally expires. The grantee can use up to SpendLimit to cover fees.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.BasicAllowance}
   */
  public static final class BasicAllowance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.BasicAllowance)
      BasicAllowanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasicAllowance.newBuilder() to construct.
    private BasicAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasicAllowance() {
      spendLimit_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BasicAllowance();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder.class);
    }

    public static final int SPEND_LIMIT_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> spendLimit_;
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getSpendLimitList() {
      return spendLimit_;
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getSpendLimitOrBuilderList() {
      return spendLimit_;
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public int getSpendLimitCount() {
      return spendLimit_.size();
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getSpendLimit(int index) {
      return spendLimit_.get(index);
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of coins that can be spent
     * by this allowance and will be updated as coins are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getSpendLimitOrBuilder(
        int index) {
      return spendLimit_.get(index);
    }

    public static final int EXPIRATION_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp expiration_;
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return Whether the expiration field is set.
     */
    @java.lang.Override
    public boolean hasExpiration() {
      return expiration_ != null;
    }
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return The expiration.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getExpiration() {
      return expiration_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
    }
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder() {
      return expiration_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < spendLimit_.size(); i++) {
        output.writeMessage(1, spendLimit_.get(i));
      }
      if (expiration_ != null) {
        output.writeMessage(2, getExpiration());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < spendLimit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, spendLimit_.get(i));
      }
      if (expiration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getExpiration());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.BasicAllowance)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.BasicAllowance other = (cosmos.feegrant.v1beta1.Feegrant.BasicAllowance) obj;

      if (!getSpendLimitList()
          .equals(other.getSpendLimitList())) return false;
      if (hasExpiration() != other.hasExpiration()) return false;
      if (hasExpiration()) {
        if (!getExpiration()
            .equals(other.getExpiration())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSpendLimitCount() > 0) {
        hash = (37 * hash) + SPEND_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getSpendLimitList().hashCode();
      }
      if (hasExpiration()) {
        hash = (37 * hash) + EXPIRATION_FIELD_NUMBER;
        hash = (53 * hash) + getExpiration().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BasicAllowance implements Allowance with a one-time grant of coins
     * that optionally expires. The grantee can use up to SpendLimit to cover fees.
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.BasicAllowance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.BasicAllowance)
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (spendLimitBuilder_ == null) {
          spendLimit_ = java.util.Collections.emptyList();
        } else {
          spendLimit_ = null;
          spendLimitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        expiration_ = null;
        if (expirationBuilder_ != null) {
          expirationBuilder_.dispose();
          expirationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance build() {
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowance result = new cosmos.feegrant.v1beta1.Feegrant.BasicAllowance(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance result) {
        if (spendLimitBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            spendLimit_ = java.util.Collections.unmodifiableList(spendLimit_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.spendLimit_ = spendLimit_;
        } else {
          result.spendLimit_ = spendLimitBuilder_.build();
        }
      }

      private void buildPartial0(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.expiration_ = expirationBuilder_ == null
              ? expiration_
              : expirationBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.BasicAllowance) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.BasicAllowance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance()) return this;
        if (spendLimitBuilder_ == null) {
          if (!other.spendLimit_.isEmpty()) {
            if (spendLimit_.isEmpty()) {
              spendLimit_ = other.spendLimit_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSpendLimitIsMutable();
              spendLimit_.addAll(other.spendLimit_);
            }
            onChanged();
          }
        } else {
          if (!other.spendLimit_.isEmpty()) {
            if (spendLimitBuilder_.isEmpty()) {
              spendLimitBuilder_.dispose();
              spendLimitBuilder_ = null;
              spendLimit_ = other.spendLimit_;
              bitField0_ = (bitField0_ & ~0x00000001);
              spendLimitBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpendLimitFieldBuilder() : null;
            } else {
              spendLimitBuilder_.addAllMessages(other.spendLimit_);
            }
          }
        }
        if (other.hasExpiration()) {
          mergeExpiration(other.getExpiration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                cosmos.base.v1beta1.CoinOuterClass.Coin m =
                    input.readMessage(
                        cosmos.base.v1beta1.CoinOuterClass.Coin.parser(),
                        extensionRegistry);
                if (spendLimitBuilder_ == null) {
                  ensureSpendLimitIsMutable();
                  spendLimit_.add(m);
                } else {
                  spendLimitBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getExpirationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> spendLimit_ =
        java.util.Collections.emptyList();
      private void ensureSpendLimitIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          spendLimit_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(spendLimit_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> spendLimitBuilder_;

      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getSpendLimitList() {
        if (spendLimitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spendLimit_);
        } else {
          return spendLimitBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public int getSpendLimitCount() {
        if (spendLimitBuilder_ == null) {
          return spendLimit_.size();
        } else {
          return spendLimitBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getSpendLimit(int index) {
        if (spendLimitBuilder_ == null) {
          return spendLimit_.get(index);
        } else {
          return spendLimitBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder setSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (spendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpendLimitIsMutable();
          spendLimit_.set(index, value);
          onChanged();
        } else {
          spendLimitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder setSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.set(index, builderForValue.build());
          onChanged();
        } else {
          spendLimitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addSpendLimit(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (spendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpendLimitIsMutable();
          spendLimit_.add(value);
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (spendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpendLimitIsMutable();
          spendLimit_.add(index, value);
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addSpendLimit(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.add(builderForValue.build());
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.add(index, builderForValue.build());
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addAllSpendLimit(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spendLimit_);
          onChanged();
        } else {
          spendLimitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder clearSpendLimit() {
        if (spendLimitBuilder_ == null) {
          spendLimit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          spendLimitBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder removeSpendLimit(int index) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.remove(index);
          onChanged();
        } else {
          spendLimitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getSpendLimitBuilder(
          int index) {
        return getSpendLimitFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getSpendLimitOrBuilder(
          int index) {
        if (spendLimitBuilder_ == null) {
          return spendLimit_.get(index);  } else {
          return spendLimitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getSpendLimitOrBuilderList() {
        if (spendLimitBuilder_ != null) {
          return spendLimitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spendLimit_);
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addSpendLimitBuilder() {
        return getSpendLimitFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addSpendLimitBuilder(
          int index) {
        return getSpendLimitFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of coins that can be spent
       * by this allowance and will be updated as coins are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getSpendLimitBuilderList() {
        return getSpendLimitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getSpendLimitFieldBuilder() {
        if (spendLimitBuilder_ == null) {
          spendLimitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  spendLimit_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          spendLimit_ = null;
        }
        return spendLimitBuilder_;
      }

      private com.google.protobuf.Timestamp expiration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expirationBuilder_;
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       * @return Whether the expiration field is set.
       */
      public boolean hasExpiration() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       * @return The expiration.
       */
      public com.google.protobuf.Timestamp getExpiration() {
        if (expirationBuilder_ == null) {
          return expiration_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
        } else {
          return expirationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder setExpiration(com.google.protobuf.Timestamp value) {
        if (expirationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expiration_ = value;
        } else {
          expirationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder setExpiration(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (expirationBuilder_ == null) {
          expiration_ = builderForValue.build();
        } else {
          expirationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeExpiration(com.google.protobuf.Timestamp value) {
        if (expirationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            expiration_ != null &&
            expiration_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getExpirationBuilder().mergeFrom(value);
          } else {
            expiration_ = value;
          }
        } else {
          expirationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder clearExpiration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        expiration_ = null;
        if (expirationBuilder_ != null) {
          expirationBuilder_.dispose();
          expirationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getExpirationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExpirationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder() {
        if (expirationBuilder_ != null) {
          return expirationBuilder_.getMessageOrBuilder();
        } else {
          return expiration_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
        }
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getExpirationFieldBuilder() {
        if (expirationBuilder_ == null) {
          expirationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getExpiration(),
                  getParentForChildren(),
                  isClean());
          expiration_ = null;
        }
        return expirationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.BasicAllowance)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.BasicAllowance)
    private static final cosmos.feegrant.v1beta1.Feegrant.BasicAllowance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.BasicAllowance();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasicAllowance>
        PARSER = new com.google.protobuf.AbstractParser<BasicAllowance>() {
      @java.lang.Override
      public BasicAllowance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BasicAllowance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasicAllowance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PeriodicAllowanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.PeriodicAllowance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return Whether the basic field is set.
     */
    boolean hasBasic();
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return The basic.
     */
    cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getBasic();
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder getBasicOrBuilder();

    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the period field is set.
     */
    boolean hasPeriod();
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return The period.
     */
    com.google.protobuf.Duration getPeriod();
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    com.google.protobuf.DurationOrBuilder getPeriodOrBuilder();

    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getPeriodSpendLimitList();
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodSpendLimit(int index);
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    int getPeriodSpendLimitCount();
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodSpendLimitOrBuilderList();
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodSpendLimitOrBuilder(
        int index);

    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getPeriodCanSpendList();
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodCanSpend(int index);
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    int getPeriodCanSpendCount();
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodCanSpendOrBuilderList();
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodCanSpendOrBuilder(
        int index);

    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the periodReset field is set.
     */
    boolean hasPeriodReset();
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     * @return The periodReset.
     */
    com.google.protobuf.Timestamp getPeriodReset();
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder();
  }
  /**
   * <pre>
   * PeriodicAllowance extends Allowance to allow for both a maximum cap,
   * as well as a limit per time period.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.PeriodicAllowance}
   */
  public static final class PeriodicAllowance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.PeriodicAllowance)
      PeriodicAllowanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PeriodicAllowance.newBuilder() to construct.
    private PeriodicAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PeriodicAllowance() {
      periodSpendLimit_ = java.util.Collections.emptyList();
      periodCanSpend_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PeriodicAllowance();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.Builder.class);
    }

    public static final int BASIC_FIELD_NUMBER = 1;
    private cosmos.feegrant.v1beta1.Feegrant.BasicAllowance basic_;
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return Whether the basic field is set.
     */
    @java.lang.Override
    public boolean hasBasic() {
      return basic_ != null;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return The basic.
     */
    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getBasic() {
      return basic_ == null ? cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder getBasicOrBuilder() {
      return basic_ == null ? cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
    }

    public static final int PERIOD_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration period_;
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the period field is set.
     */
    @java.lang.Override
    public boolean hasPeriod() {
      return period_ != null;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     * @return The period.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getPeriod() {
      return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
      return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
    }

    public static final int PERIOD_SPEND_LIMIT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodSpendLimit_;
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodSpendLimitList() {
      return periodSpendLimit_;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodSpendLimitOrBuilderList() {
      return periodSpendLimit_;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public int getPeriodSpendLimitCount() {
      return periodSpendLimit_.size();
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodSpendLimit(int index) {
      return periodSpendLimit_.get(index);
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodSpendLimitOrBuilder(
        int index) {
      return periodSpendLimit_.get(index);
    }

    public static final int PERIOD_CAN_SPEND_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodCanSpend_;
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodCanSpendList() {
      return periodCanSpend_;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodCanSpendOrBuilderList() {
      return periodCanSpend_;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public int getPeriodCanSpendCount() {
      return periodCanSpend_.size();
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodCanSpend(int index) {
      return periodCanSpend_.get(index);
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodCanSpendOrBuilder(
        int index) {
      return periodCanSpend_.get(index);
    }

    public static final int PERIOD_RESET_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp periodReset_;
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     * @return Whether the periodReset field is set.
     */
    @java.lang.Override
    public boolean hasPeriodReset() {
      return periodReset_ != null;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     * @return The periodReset.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getPeriodReset() {
      return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder() {
      return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basic_ != null) {
        output.writeMessage(1, getBasic());
      }
      if (period_ != null) {
        output.writeMessage(2, getPeriod());
      }
      for (int i = 0; i < periodSpendLimit_.size(); i++) {
        output.writeMessage(3, periodSpendLimit_.get(i));
      }
      for (int i = 0; i < periodCanSpend_.size(); i++) {
        output.writeMessage(4, periodCanSpend_.get(i));
      }
      if (periodReset_ != null) {
        output.writeMessage(5, getPeriodReset());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basic_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasic());
      }
      if (period_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPeriod());
      }
      for (int i = 0; i < periodSpendLimit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, periodSpendLimit_.get(i));
      }
      for (int i = 0; i < periodCanSpend_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, periodCanSpend_.get(i));
      }
      if (periodReset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPeriodReset());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance other = (cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance) obj;

      if (hasBasic() != other.hasBasic()) return false;
      if (hasBasic()) {
        if (!getBasic()
            .equals(other.getBasic())) return false;
      }
      if (hasPeriod() != other.hasPeriod()) return false;
      if (hasPeriod()) {
        if (!getPeriod()
            .equals(other.getPeriod())) return false;
      }
      if (!getPeriodSpendLimitList()
          .equals(other.getPeriodSpendLimitList())) return false;
      if (!getPeriodCanSpendList()
          .equals(other.getPeriodCanSpendList())) return false;
      if (hasPeriodReset() != other.hasPeriodReset()) return false;
      if (hasPeriodReset()) {
        if (!getPeriodReset()
            .equals(other.getPeriodReset())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasic()) {
        hash = (37 * hash) + BASIC_FIELD_NUMBER;
        hash = (53 * hash) + getBasic().hashCode();
      }
      if (hasPeriod()) {
        hash = (37 * hash) + PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getPeriod().hashCode();
      }
      if (getPeriodSpendLimitCount() > 0) {
        hash = (37 * hash) + PERIOD_SPEND_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodSpendLimitList().hashCode();
      }
      if (getPeriodCanSpendCount() > 0) {
        hash = (37 * hash) + PERIOD_CAN_SPEND_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodCanSpendList().hashCode();
      }
      if (hasPeriodReset()) {
        hash = (37 * hash) + PERIOD_RESET_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodReset().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PeriodicAllowance extends Allowance to allow for both a maximum cap,
     * as well as a limit per time period.
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.PeriodicAllowance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.PeriodicAllowance)
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        basic_ = null;
        if (basicBuilder_ != null) {
          basicBuilder_.dispose();
          basicBuilder_ = null;
        }
        period_ = null;
        if (periodBuilder_ != null) {
          periodBuilder_.dispose();
          periodBuilder_ = null;
        }
        if (periodSpendLimitBuilder_ == null) {
          periodSpendLimit_ = java.util.Collections.emptyList();
        } else {
          periodSpendLimit_ = null;
          periodSpendLimitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (periodCanSpendBuilder_ == null) {
          periodCanSpend_ = java.util.Collections.emptyList();
        } else {
          periodCanSpend_ = null;
          periodCanSpendBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        periodReset_ = null;
        if (periodResetBuilder_ != null) {
          periodResetBuilder_.dispose();
          periodResetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance build() {
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance result = new cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance result) {
        if (periodSpendLimitBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            periodSpendLimit_ = java.util.Collections.unmodifiableList(periodSpendLimit_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.periodSpendLimit_ = periodSpendLimit_;
        } else {
          result.periodSpendLimit_ = periodSpendLimitBuilder_.build();
        }
        if (periodCanSpendBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            periodCanSpend_ = java.util.Collections.unmodifiableList(periodCanSpend_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.periodCanSpend_ = periodCanSpend_;
        } else {
          result.periodCanSpend_ = periodCanSpendBuilder_.build();
        }
      }

      private void buildPartial0(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.basic_ = basicBuilder_ == null
              ? basic_
              : basicBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.period_ = periodBuilder_ == null
              ? period_
              : periodBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.periodReset_ = periodResetBuilder_ == null
              ? periodReset_
              : periodResetBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.getDefaultInstance()) return this;
        if (other.hasBasic()) {
          mergeBasic(other.getBasic());
        }
        if (other.hasPeriod()) {
          mergePeriod(other.getPeriod());
        }
        if (periodSpendLimitBuilder_ == null) {
          if (!other.periodSpendLimit_.isEmpty()) {
            if (periodSpendLimit_.isEmpty()) {
              periodSpendLimit_ = other.periodSpendLimit_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePeriodSpendLimitIsMutable();
              periodSpendLimit_.addAll(other.periodSpendLimit_);
            }
            onChanged();
          }
        } else {
          if (!other.periodSpendLimit_.isEmpty()) {
            if (periodSpendLimitBuilder_.isEmpty()) {
              periodSpendLimitBuilder_.dispose();
              periodSpendLimitBuilder_ = null;
              periodSpendLimit_ = other.periodSpendLimit_;
              bitField0_ = (bitField0_ & ~0x00000004);
              periodSpendLimitBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPeriodSpendLimitFieldBuilder() : null;
            } else {
              periodSpendLimitBuilder_.addAllMessages(other.periodSpendLimit_);
            }
          }
        }
        if (periodCanSpendBuilder_ == null) {
          if (!other.periodCanSpend_.isEmpty()) {
            if (periodCanSpend_.isEmpty()) {
              periodCanSpend_ = other.periodCanSpend_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePeriodCanSpendIsMutable();
              periodCanSpend_.addAll(other.periodCanSpend_);
            }
            onChanged();
          }
        } else {
          if (!other.periodCanSpend_.isEmpty()) {
            if (periodCanSpendBuilder_.isEmpty()) {
              periodCanSpendBuilder_.dispose();
              periodCanSpendBuilder_ = null;
              periodCanSpend_ = other.periodCanSpend_;
              bitField0_ = (bitField0_ & ~0x00000008);
              periodCanSpendBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPeriodCanSpendFieldBuilder() : null;
            } else {
              periodCanSpendBuilder_.addAllMessages(other.periodCanSpend_);
            }
          }
        }
        if (other.hasPeriodReset()) {
          mergePeriodReset(other.getPeriodReset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getBasicFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPeriodFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                cosmos.base.v1beta1.CoinOuterClass.Coin m =
                    input.readMessage(
                        cosmos.base.v1beta1.CoinOuterClass.Coin.parser(),
                        extensionRegistry);
                if (periodSpendLimitBuilder_ == null) {
                  ensurePeriodSpendLimitIsMutable();
                  periodSpendLimit_.add(m);
                } else {
                  periodSpendLimitBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                cosmos.base.v1beta1.CoinOuterClass.Coin m =
                    input.readMessage(
                        cosmos.base.v1beta1.CoinOuterClass.Coin.parser(),
                        extensionRegistry);
                if (periodCanSpendBuilder_ == null) {
                  ensurePeriodCanSpendIsMutable();
                  periodCanSpend_.add(m);
                } else {
                  periodCanSpendBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getPeriodResetFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private cosmos.feegrant.v1beta1.Feegrant.BasicAllowance basic_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.feegrant.v1beta1.Feegrant.BasicAllowance, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder, cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder> basicBuilder_;
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       * @return Whether the basic field is set.
       */
      public boolean hasBasic() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       * @return The basic.
       */
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getBasic() {
        if (basicBuilder_ == null) {
          return basic_ == null ? cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
        } else {
          return basicBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      public Builder setBasic(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance value) {
        if (basicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basic_ = value;
        } else {
          basicBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      public Builder setBasic(
          cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder builderForValue) {
        if (basicBuilder_ == null) {
          basic_ = builderForValue.build();
        } else {
          basicBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      public Builder mergeBasic(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance value) {
        if (basicBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            basic_ != null &&
            basic_ != cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance()) {
            getBasicBuilder().mergeFrom(value);
          } else {
            basic_ = value;
          }
        } else {
          basicBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      public Builder clearBasic() {
        bitField0_ = (bitField0_ & ~0x00000001);
        basic_ = null;
        if (basicBuilder_ != null) {
          basicBuilder_.dispose();
          basicBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder getBasicBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBasicFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder getBasicOrBuilder() {
        if (basicBuilder_ != null) {
          return basicBuilder_.getMessageOrBuilder();
        } else {
          return basic_ == null ?
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
        }
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.feegrant.v1beta1.Feegrant.BasicAllowance, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder, cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder> 
          getBasicFieldBuilder() {
        if (basicBuilder_ == null) {
          basicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder, cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder>(
                  getBasic(),
                  getParentForChildren(),
                  isClean());
          basic_ = null;
        }
        return basicBuilder_;
      }

      private com.google.protobuf.Duration period_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> periodBuilder_;
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       * @return Whether the period field is set.
       */
      public boolean hasPeriod() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       * @return The period.
       */
      public com.google.protobuf.Duration getPeriod() {
        if (periodBuilder_ == null) {
          return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
        } else {
          return periodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriod(com.google.protobuf.Duration value) {
        if (periodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          period_ = value;
        } else {
          periodBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriod(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (periodBuilder_ == null) {
          period_ = builderForValue.build();
        } else {
          periodBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder mergePeriod(com.google.protobuf.Duration value) {
        if (periodBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            period_ != null &&
            period_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getPeriodBuilder().mergeFrom(value);
          } else {
            period_ = value;
          }
        } else {
          periodBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder clearPeriod() {
        bitField0_ = (bitField0_ & ~0x00000002);
        period_ = null;
        if (periodBuilder_ != null) {
          periodBuilder_.dispose();
          periodBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      public com.google.protobuf.Duration.Builder getPeriodBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPeriodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
        if (periodBuilder_ != null) {
          return periodBuilder_.getMessageOrBuilder();
        } else {
          return period_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : period_;
        }
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getPeriodFieldBuilder() {
        if (periodBuilder_ == null) {
          periodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getPeriod(),
                  getParentForChildren(),
                  isClean());
          period_ = null;
        }
        return periodBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodSpendLimit_ =
        java.util.Collections.emptyList();
      private void ensurePeriodSpendLimitIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          periodSpendLimit_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(periodSpendLimit_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> periodSpendLimitBuilder_;

      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodSpendLimitList() {
        if (periodSpendLimitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(periodSpendLimit_);
        } else {
          return periodSpendLimitBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public int getPeriodSpendLimitCount() {
        if (periodSpendLimitBuilder_ == null) {
          return periodSpendLimit_.size();
        } else {
          return periodSpendLimitBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodSpendLimit(int index) {
        if (periodSpendLimitBuilder_ == null) {
          return periodSpendLimit_.get(index);
        } else {
          return periodSpendLimitBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodSpendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.set(index, value);
          onChanged();
        } else {
          periodSpendLimitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.set(index, builderForValue.build());
          onChanged();
        } else {
          periodSpendLimitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodSpendLimit(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodSpendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(value);
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodSpendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(index, value);
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodSpendLimit(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(builderForValue.build());
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(index, builderForValue.build());
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addAllPeriodSpendLimit(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, periodSpendLimit_);
          onChanged();
        } else {
          periodSpendLimitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder clearPeriodSpendLimit() {
        if (periodSpendLimitBuilder_ == null) {
          periodSpendLimit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          periodSpendLimitBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder removePeriodSpendLimit(int index) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.remove(index);
          onChanged();
        } else {
          periodSpendLimitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getPeriodSpendLimitBuilder(
          int index) {
        return getPeriodSpendLimitFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodSpendLimitOrBuilder(
          int index) {
        if (periodSpendLimitBuilder_ == null) {
          return periodSpendLimit_.get(index);  } else {
          return periodSpendLimitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getPeriodSpendLimitOrBuilderList() {
        if (periodSpendLimitBuilder_ != null) {
          return periodSpendLimitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(periodSpendLimit_);
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodSpendLimitBuilder() {
        return getPeriodSpendLimitFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodSpendLimitBuilder(
          int index) {
        return getPeriodSpendLimitFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getPeriodSpendLimitBuilderList() {
        return getPeriodSpendLimitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getPeriodSpendLimitFieldBuilder() {
        if (periodSpendLimitBuilder_ == null) {
          periodSpendLimitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  periodSpendLimit_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          periodSpendLimit_ = null;
        }
        return periodSpendLimitBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodCanSpend_ =
        java.util.Collections.emptyList();
      private void ensurePeriodCanSpendIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          periodCanSpend_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(periodCanSpend_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> periodCanSpendBuilder_;

      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodCanSpendList() {
        if (periodCanSpendBuilder_ == null) {
          return java.util.Collections.unmodifiableList(periodCanSpend_);
        } else {
          return periodCanSpendBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public int getPeriodCanSpendCount() {
        if (periodCanSpendBuilder_ == null) {
          return periodCanSpend_.size();
        } else {
          return periodCanSpendBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodCanSpend(int index) {
        if (periodCanSpendBuilder_ == null) {
          return periodCanSpend_.get(index);
        } else {
          return periodCanSpendBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodCanSpendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.set(index, value);
          onChanged();
        } else {
          periodCanSpendBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.set(index, builderForValue.build());
          onChanged();
        } else {
          periodCanSpendBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodCanSpend(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodCanSpendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(value);
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodCanSpendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(index, value);
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodCanSpend(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(builderForValue.build());
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(index, builderForValue.build());
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder addAllPeriodCanSpend(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, periodCanSpend_);
          onChanged();
        } else {
          periodCanSpendBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder clearPeriodCanSpend() {
        if (periodCanSpendBuilder_ == null) {
          periodCanSpend_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          periodCanSpendBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public Builder removePeriodCanSpend(int index) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.remove(index);
          onChanged();
        } else {
          periodCanSpendBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getPeriodCanSpendBuilder(
          int index) {
        return getPeriodCanSpendFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodCanSpendOrBuilder(
          int index) {
        if (periodCanSpendBuilder_ == null) {
          return periodCanSpend_.get(index);  } else {
          return periodCanSpendBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getPeriodCanSpendOrBuilderList() {
        if (periodCanSpendBuilder_ != null) {
          return periodCanSpendBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(periodCanSpend_);
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodCanSpendBuilder() {
        return getPeriodCanSpendFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodCanSpendBuilder(
          int index) {
        return getPeriodCanSpendFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getPeriodCanSpendBuilderList() {
        return getPeriodCanSpendFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getPeriodCanSpendFieldBuilder() {
        if (periodCanSpendBuilder_ == null) {
          periodCanSpendBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  periodCanSpend_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          periodCanSpend_ = null;
        }
        return periodCanSpendBuilder_;
      }

      private com.google.protobuf.Timestamp periodReset_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> periodResetBuilder_;
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       * @return Whether the periodReset field is set.
       */
      public boolean hasPeriodReset() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       * @return The periodReset.
       */
      public com.google.protobuf.Timestamp getPeriodReset() {
        if (periodResetBuilder_ == null) {
          return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
        } else {
          return periodResetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriodReset(com.google.protobuf.Timestamp value) {
        if (periodResetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          periodReset_ = value;
        } else {
          periodResetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder setPeriodReset(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (periodResetBuilder_ == null) {
          periodReset_ = builderForValue.build();
        } else {
          periodResetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder mergePeriodReset(com.google.protobuf.Timestamp value) {
        if (periodResetBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            periodReset_ != null &&
            periodReset_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getPeriodResetBuilder().mergeFrom(value);
          } else {
            periodReset_ = value;
          }
        } else {
          periodResetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      public Builder clearPeriodReset() {
        bitField0_ = (bitField0_ & ~0x00000010);
        periodReset_ = null;
        if (periodResetBuilder_ != null) {
          periodResetBuilder_.dispose();
          periodResetBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getPeriodResetBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPeriodResetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder() {
        if (periodResetBuilder_ != null) {
          return periodResetBuilder_.getMessageOrBuilder();
        } else {
          return periodReset_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
        }
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getPeriodResetFieldBuilder() {
        if (periodResetBuilder_ == null) {
          periodResetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getPeriodReset(),
                  getParentForChildren(),
                  isClean());
          periodReset_ = null;
        }
        return periodResetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.PeriodicAllowance)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.PeriodicAllowance)
    private static final cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PeriodicAllowance>
        PARSER = new com.google.protobuf.AbstractParser<PeriodicAllowance>() {
      @java.lang.Override
      public PeriodicAllowance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PeriodicAllowance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PeriodicAllowance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllowedMsgAllowanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * allowance can be any of basic and periodic fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    boolean hasAllowance();
    /**
     * <pre>
     * allowance can be any of basic and periodic fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return The allowance.
     */
    com.google.protobuf.Any getAllowance();
    /**
     * <pre>
     * allowance can be any of basic and periodic fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     */
    com.google.protobuf.AnyOrBuilder getAllowanceOrBuilder();

    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return A list containing the allowedMessages.
     */
    java.util.List<java.lang.String>
        getAllowedMessagesList();
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return The count of allowedMessages.
     */
    int getAllowedMessagesCount();
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the element to return.
     * @return The allowedMessages at the given index.
     */
    java.lang.String getAllowedMessages(int index);
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the allowedMessages at the given index.
     */
    com.google.protobuf.ByteString
        getAllowedMessagesBytes(int index);
  }
  /**
   * <pre>
   * AllowedMsgAllowance creates allowance only for specified message types.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.AllowedMsgAllowance}
   */
  public static final class AllowedMsgAllowance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
      AllowedMsgAllowanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllowedMsgAllowance.newBuilder() to construct.
    private AllowedMsgAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllowedMsgAllowance() {
      allowedMessages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllowedMsgAllowance();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.class, cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.Builder.class);
    }

    public static final int ALLOWANCE_FIELD_NUMBER = 1;
    private com.google.protobuf.Any allowance_;
    /**
     * <pre>
     * allowance can be any of basic and periodic fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    @java.lang.Override
    public boolean hasAllowance() {
      return allowance_ != null;
    }
    /**
     * <pre>
     * allowance can be any of basic and periodic fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return The allowance.
     */
    @java.lang.Override
    public com.google.protobuf.Any getAllowance() {
      return allowance_ == null ? com.google.protobuf.Any.getDefaultInstance() : allowance_;
    }
    /**
     * <pre>
     * allowance can be any of basic and periodic fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getAllowanceOrBuilder() {
      return allowance_ == null ? com.google.protobuf.Any.getDefaultInstance() : allowance_;
    }

    public static final int ALLOWED_MESSAGES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList allowedMessages_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return A list containing the allowedMessages.
     */
    public com.google.protobuf.ProtocolStringList
        getAllowedMessagesList() {
      return allowedMessages_;
    }
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return The count of allowedMessages.
     */
    public int getAllowedMessagesCount() {
      return allowedMessages_.size();
    }
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the element to return.
     * @return The allowedMessages at the given index.
     */
    public java.lang.String getAllowedMessages(int index) {
      return allowedMessages_.get(index);
    }
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the allowedMessages at the given index.
     */
    public com.google.protobuf.ByteString
        getAllowedMessagesBytes(int index) {
      return allowedMessages_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (allowance_ != null) {
        output.writeMessage(1, getAllowance());
      }
      for (int i = 0; i < allowedMessages_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, allowedMessages_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (allowance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAllowance());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allowedMessages_.size(); i++) {
          dataSize += computeStringSizeNoTag(allowedMessages_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAllowedMessagesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance other = (cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance) obj;

      if (hasAllowance() != other.hasAllowance()) return false;
      if (hasAllowance()) {
        if (!getAllowance()
            .equals(other.getAllowance())) return false;
      }
      if (!getAllowedMessagesList()
          .equals(other.getAllowedMessagesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAllowance()) {
        hash = (37 * hash) + ALLOWANCE_FIELD_NUMBER;
        hash = (53 * hash) + getAllowance().hashCode();
      }
      if (getAllowedMessagesCount() > 0) {
        hash = (37 * hash) + ALLOWED_MESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getAllowedMessagesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AllowedMsgAllowance creates allowance only for specified message types.
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.AllowedMsgAllowance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.class, cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        allowance_ = null;
        if (allowanceBuilder_ != null) {
          allowanceBuilder_.dispose();
          allowanceBuilder_ = null;
        }
        allowedMessages_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance build() {
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance result = new cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.allowance_ = allowanceBuilder_ == null
              ? allowance_
              : allowanceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          allowedMessages_.makeImmutable();
          result.allowedMessages_ = allowedMessages_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.getDefaultInstance()) return this;
        if (other.hasAllowance()) {
          mergeAllowance(other.getAllowance());
        }
        if (!other.allowedMessages_.isEmpty()) {
          if (allowedMessages_.isEmpty()) {
            allowedMessages_ = other.allowedMessages_;
            bitField0_ |= 0x00000002;
          } else {
            ensureAllowedMessagesIsMutable();
            allowedMessages_.addAll(other.allowedMessages_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getAllowanceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureAllowedMessagesIsMutable();
                allowedMessages_.add(s);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Any allowance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> allowanceBuilder_;
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       * @return Whether the allowance field is set.
       */
      public boolean hasAllowance() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       * @return The allowance.
       */
      public com.google.protobuf.Any getAllowance() {
        if (allowanceBuilder_ == null) {
          return allowance_ == null ? com.google.protobuf.Any.getDefaultInstance() : allowance_;
        } else {
          return allowanceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder setAllowance(com.google.protobuf.Any value) {
        if (allowanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allowance_ = value;
        } else {
          allowanceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder setAllowance(
          com.google.protobuf.Any.Builder builderForValue) {
        if (allowanceBuilder_ == null) {
          allowance_ = builderForValue.build();
        } else {
          allowanceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder mergeAllowance(com.google.protobuf.Any value) {
        if (allowanceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            allowance_ != null &&
            allowance_ != com.google.protobuf.Any.getDefaultInstance()) {
            getAllowanceBuilder().mergeFrom(value);
          } else {
            allowance_ = value;
          }
        } else {
          allowanceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder clearAllowance() {
        bitField0_ = (bitField0_ & ~0x00000001);
        allowance_ = null;
        if (allowanceBuilder_ != null) {
          allowanceBuilder_.dispose();
          allowanceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public com.google.protobuf.Any.Builder getAllowanceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAllowanceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public com.google.protobuf.AnyOrBuilder getAllowanceOrBuilder() {
        if (allowanceBuilder_ != null) {
          return allowanceBuilder_.getMessageOrBuilder();
        } else {
          return allowance_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : allowance_;
        }
      }
      /**
       * <pre>
       * allowance can be any of basic and periodic fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getAllowanceFieldBuilder() {
        if (allowanceBuilder_ == null) {
          allowanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getAllowance(),
                  getParentForChildren(),
                  isClean());
          allowance_ = null;
        }
        return allowanceBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList allowedMessages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureAllowedMessagesIsMutable() {
        if (!allowedMessages_.isModifiable()) {
          allowedMessages_ = new com.google.protobuf.LazyStringArrayList(allowedMessages_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @return A list containing the allowedMessages.
       */
      public com.google.protobuf.ProtocolStringList
          getAllowedMessagesList() {
        allowedMessages_.makeImmutable();
        return allowedMessages_;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @return The count of allowedMessages.
       */
      public int getAllowedMessagesCount() {
        return allowedMessages_.size();
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param index The index of the element to return.
       * @return The allowedMessages at the given index.
       */
      public java.lang.String getAllowedMessages(int index) {
        return allowedMessages_.get(index);
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the allowedMessages at the given index.
       */
      public com.google.protobuf.ByteString
          getAllowedMessagesBytes(int index) {
        return allowedMessages_.getByteString(index);
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param index The index to set the value at.
       * @param value The allowedMessages to set.
       * @return This builder for chaining.
       */
      public Builder setAllowedMessages(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAllowedMessagesIsMutable();
        allowedMessages_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param value The allowedMessages to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedMessages(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAllowedMessagesIsMutable();
        allowedMessages_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param values The allowedMessages to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllowedMessages(
          java.lang.Iterable<java.lang.String> values) {
        ensureAllowedMessagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allowedMessages_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowedMessages() {
        allowedMessages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param value The bytes of the allowedMessages to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedMessagesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureAllowedMessagesIsMutable();
        allowedMessages_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
    private static final cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllowedMsgAllowance>
        PARSER = new com.google.protobuf.AbstractParser<AllowedMsgAllowance>() {
      @java.lang.Override
      public AllowedMsgAllowance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AllowedMsgAllowance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllowedMsgAllowance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GrantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.Grant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The granter.
     */
    java.lang.String getGranter();
    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for granter.
     */
    com.google.protobuf.ByteString
        getGranterBytes();

    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The grantee.
     */
    java.lang.String getGrantee();
    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for grantee.
     */
    com.google.protobuf.ByteString
        getGranteeBytes();

    /**
     * <pre>
     * allowance can be any of basic, periodic, allowed fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    boolean hasAllowance();
    /**
     * <pre>
     * allowance can be any of basic, periodic, allowed fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return The allowance.
     */
    com.google.protobuf.Any getAllowance();
    /**
     * <pre>
     * allowance can be any of basic, periodic, allowed fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     */
    com.google.protobuf.AnyOrBuilder getAllowanceOrBuilder();
  }
  /**
   * <pre>
   * Grant is stored in the KVStore to record a grant with full context
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.Grant}
   */
  public static final class Grant extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.Grant)
      GrantOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Grant.newBuilder() to construct.
    private Grant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Grant() {
      granter_ = "";
      grantee_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Grant();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.Grant.class, cosmos.feegrant.v1beta1.Feegrant.Grant.Builder.class);
    }

    public static final int GRANTER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object granter_ = "";
    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The granter.
     */
    @java.lang.Override
    public java.lang.String getGranter() {
      java.lang.Object ref = granter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        granter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for granter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGranterBytes() {
      java.lang.Object ref = granter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        granter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRANTEE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object grantee_ = "";
    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The grantee.
     */
    @java.lang.Override
    public java.lang.String getGrantee() {
      java.lang.Object ref = grantee_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        grantee_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for grantee.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGranteeBytes() {
      java.lang.Object ref = grantee_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        grantee_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLOWANCE_FIELD_NUMBER = 3;
    private com.google.protobuf.Any allowance_;
    /**
     * <pre>
     * allowance can be any of basic, periodic, allowed fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    @java.lang.Override
    public boolean hasAllowance() {
      return allowance_ != null;
    }
    /**
     * <pre>
     * allowance can be any of basic, periodic, allowed fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     * @return The allowance.
     */
    @java.lang.Override
    public com.google.protobuf.Any getAllowance() {
      return allowance_ == null ? com.google.protobuf.Any.getDefaultInstance() : allowance_;
    }
    /**
     * <pre>
     * allowance can be any of basic, periodic, allowed fee allowance.
     * </pre>
     *
     * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getAllowanceOrBuilder() {
      return allowance_ == null ? com.google.protobuf.Any.getDefaultInstance() : allowance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(granter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, granter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(grantee_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, grantee_);
      }
      if (allowance_ != null) {
        output.writeMessage(3, getAllowance());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(granter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, granter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(grantee_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, grantee_);
      }
      if (allowance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAllowance());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.Grant)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.Grant other = (cosmos.feegrant.v1beta1.Feegrant.Grant) obj;

      if (!getGranter()
          .equals(other.getGranter())) return false;
      if (!getGrantee()
          .equals(other.getGrantee())) return false;
      if (hasAllowance() != other.hasAllowance()) return false;
      if (hasAllowance()) {
        if (!getAllowance()
            .equals(other.getAllowance())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GRANTER_FIELD_NUMBER;
      hash = (53 * hash) + getGranter().hashCode();
      hash = (37 * hash) + GRANTEE_FIELD_NUMBER;
      hash = (53 * hash) + getGrantee().hashCode();
      if (hasAllowance()) {
        hash = (37 * hash) + ALLOWANCE_FIELD_NUMBER;
        hash = (53 * hash) + getAllowance().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.Grant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Grant is stored in the KVStore to record a grant with full context
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.Grant}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.Grant)
        cosmos.feegrant.v1beta1.Feegrant.GrantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.Grant.class, cosmos.feegrant.v1beta1.Feegrant.Grant.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.Grant.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        granter_ = "";
        grantee_ = "";
        allowance_ = null;
        if (allowanceBuilder_ != null) {
          allowanceBuilder_.dispose();
          allowanceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.Grant getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.Grant.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.Grant build() {
        cosmos.feegrant.v1beta1.Feegrant.Grant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.Grant buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.Grant result = new cosmos.feegrant.v1beta1.Feegrant.Grant(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cosmos.feegrant.v1beta1.Feegrant.Grant result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.granter_ = granter_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.grantee_ = grantee_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.allowance_ = allowanceBuilder_ == null
              ? allowance_
              : allowanceBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.Grant) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.Grant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.Grant other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.Grant.getDefaultInstance()) return this;
        if (!other.getGranter().isEmpty()) {
          granter_ = other.granter_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getGrantee().isEmpty()) {
          grantee_ = other.grantee_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasAllowance()) {
          mergeAllowance(other.getAllowance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                granter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                grantee_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getAllowanceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object granter_ = "";
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The granter.
       */
      public java.lang.String getGranter() {
        java.lang.Object ref = granter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          granter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for granter.
       */
      public com.google.protobuf.ByteString
          getGranterBytes() {
        java.lang.Object ref = granter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          granter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The granter to set.
       * @return This builder for chaining.
       */
      public Builder setGranter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        granter_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGranter() {
        granter_ = getDefaultInstance().getGranter();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for granter to set.
       * @return This builder for chaining.
       */
      public Builder setGranterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        granter_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object grantee_ = "";
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The grantee.
       */
      public java.lang.String getGrantee() {
        java.lang.Object ref = grantee_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          grantee_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for grantee.
       */
      public com.google.protobuf.ByteString
          getGranteeBytes() {
        java.lang.Object ref = grantee_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          grantee_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The grantee to set.
       * @return This builder for chaining.
       */
      public Builder setGrantee(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        grantee_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGrantee() {
        grantee_ = getDefaultInstance().getGrantee();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for grantee to set.
       * @return This builder for chaining.
       */
      public Builder setGranteeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        grantee_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any allowance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> allowanceBuilder_;
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       * @return Whether the allowance field is set.
       */
      public boolean hasAllowance() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       * @return The allowance.
       */
      public com.google.protobuf.Any getAllowance() {
        if (allowanceBuilder_ == null) {
          return allowance_ == null ? com.google.protobuf.Any.getDefaultInstance() : allowance_;
        } else {
          return allowanceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder setAllowance(com.google.protobuf.Any value) {
        if (allowanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allowance_ = value;
        } else {
          allowanceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder setAllowance(
          com.google.protobuf.Any.Builder builderForValue) {
        if (allowanceBuilder_ == null) {
          allowance_ = builderForValue.build();
        } else {
          allowanceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder mergeAllowance(com.google.protobuf.Any value) {
        if (allowanceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            allowance_ != null &&
            allowance_ != com.google.protobuf.Any.getDefaultInstance()) {
            getAllowanceBuilder().mergeFrom(value);
          } else {
            allowance_ = value;
          }
        } else {
          allowanceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public Builder clearAllowance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        allowance_ = null;
        if (allowanceBuilder_ != null) {
          allowanceBuilder_.dispose();
          allowanceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public com.google.protobuf.Any.Builder getAllowanceBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getAllowanceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      public com.google.protobuf.AnyOrBuilder getAllowanceOrBuilder() {
        if (allowanceBuilder_ != null) {
          return allowanceBuilder_.getMessageOrBuilder();
        } else {
          return allowance_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : allowance_;
        }
      }
      /**
       * <pre>
       * allowance can be any of basic, periodic, allowed fee allowance.
       * </pre>
       *
       * <code>.google.protobuf.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getAllowanceFieldBuilder() {
        if (allowanceBuilder_ == null) {
          allowanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getAllowance(),
                  getParentForChildren(),
                  isClean());
          allowance_ = null;
        }
        return allowanceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.Grant)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.Grant)
    private static final cosmos.feegrant.v1beta1.Feegrant.Grant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.Grant();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.Grant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Grant>
        PARSER = new com.google.protobuf.AbstractParser<Grant>() {
      @java.lang.Override
      public Grant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Grant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Grant> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.Grant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&cosmos/feegrant/v1beta1/feegrant.proto" +
      "\022\027cosmos.feegrant.v1beta1\032\024gogoproto/gog" +
      "o.proto\032\031google/protobuf/any.proto\032\031cosm" +
      "os_proto/cosmos.proto\032\036cosmos/base/v1bet" +
      "a1/coin.proto\032\021amino/amino.proto\032\037google" +
      "/protobuf/timestamp.proto\032\036google/protob" +
      "uf/duration.proto\"\366\001\n\016BasicAllowance\022e\n\013" +
      "spend_limit\030\001 \003(\0132\031.cosmos.base.v1beta1." +
      "CoinB5\310\336\037\000\252\337\037(github.com/cosmos/cosmos-s" +
      "dk/types.Coins\250\347\260*\001\0224\n\nexpiration\030\002 \001(\0132" +
      "\032.google.protobuf.TimestampB\004\220\337\037\001:G\312\264-%c" +
      "osmos.feegrant.v1beta1.FeeAllowanceI\212\347\260*" +
      "\031cosmos-sdk/BasicAllowance\"\367\003\n\021PeriodicA" +
      "llowance\022A\n\005basic\030\001 \001(\0132\'.cosmos.feegran" +
      "t.v1beta1.BasicAllowanceB\t\310\336\037\000\250\347\260*\001\0228\n\006p" +
      "eriod\030\002 \001(\0132\031.google.protobuf.DurationB\r" +
      "\310\336\037\000\230\337\037\001\250\347\260*\001\022l\n\022period_spend_limit\030\003 \003(" +
      "\0132\031.cosmos.base.v1beta1.CoinB5\310\336\037\000\252\337\037(gi" +
      "thub.com/cosmos/cosmos-sdk/types.Coins\250\347" +
      "\260*\001\022j\n\020period_can_spend\030\004 \003(\0132\031.cosmos.b" +
      "ase.v1beta1.CoinB5\310\336\037\000\252\337\037(github.com/cos" +
      "mos/cosmos-sdk/types.Coins\250\347\260*\001\022?\n\014perio" +
      "d_reset\030\005 \001(\0132\032.google.protobuf.Timestam" +
      "pB\r\310\336\037\000\220\337\037\001\250\347\260*\001:J\312\264-%cosmos.feegrant.v1" +
      "beta1.FeeAllowanceI\212\347\260*\034cosmos-sdk/Perio" +
      "dicAllowance\"\325\001\n\023AllowedMsgAllowance\022R\n\t" +
      "allowance\030\001 \001(\0132\024.google.protobuf.AnyB)\312" +
      "\264-%cosmos.feegrant.v1beta1.FeeAllowanceI" +
      "\022\030\n\020allowed_messages\030\002 \003(\t:P\210\240\037\000\312\264-%cosm" +
      "os.feegrant.v1beta1.FeeAllowanceI\212\347\260*\036co" +
      "smos-sdk/AllowedMsgAllowance\"\261\001\n\005Grant\022)" +
      "\n\007granter\030\001 \001(\tB\030\322\264-\024cosmos.AddressStrin" +
      "g\022)\n\007grantee\030\002 \001(\tB\030\322\264-\024cosmos.AddressSt" +
      "ring\022R\n\tallowance\030\003 \001(\0132\024.google.protobu" +
      "f.AnyB)\312\264-%cosmos.feegrant.v1beta1.FeeAl" +
      "lowanceIB)Z\'github.com/cosmos/cosmos-sdk" +
      "/x/feegrantb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.GoGoProtos.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
          cosmos_proto.Cosmos.getDescriptor(),
          cosmos.base.v1beta1.CoinOuterClass.getDescriptor(),
          amino.Amino.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor,
        new java.lang.String[] { "SpendLimit", "Expiration", });
    internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor,
        new java.lang.String[] { "Basic", "Period", "PeriodSpendLimit", "PeriodCanSpend", "PeriodReset", });
    internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor,
        new java.lang.String[] { "Allowance", "AllowedMessages", });
    internal_static_cosmos_feegrant_v1beta1_Grant_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_Grant_descriptor,
        new java.lang.String[] { "Granter", "Grantee", "Allowance", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(amino.Amino.dontOmitempty);
    registry.add(amino.Amino.name);
    registry.add(cosmos_proto.Cosmos.acceptsInterface);
    registry.add(cosmos_proto.Cosmos.implementsInterface);
    registry.add(cosmos_proto.Cosmos.scalar);
    registry.add(com.google.protobuf.GoGoProtos.castrepeated);
    registry.add(com.google.protobuf.GoGoProtos.goprotoGetters);
    registry.add(com.google.protobuf.GoGoProtos.nullable);
    registry.add(com.google.protobuf.GoGoProtos.stdduration);
    registry.add(com.google.protobuf.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.GoGoProtos.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
    cosmos_proto.Cosmos.getDescriptor();
    cosmos.base.v1beta1.CoinOuterClass.getDescriptor();
    amino.Amino.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
