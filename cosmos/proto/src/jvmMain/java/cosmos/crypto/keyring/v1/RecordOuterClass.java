// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/crypto/keyring/v1/record.proto

package cosmos.crypto.keyring.v1;

public final class RecordOuterClass {
  private RecordOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.crypto.keyring.v1.Record)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * name represents a name of Record
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name represents a name of Record
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * pub_key represents a public key in any format
     * </pre>
     *
     * <code>.google.protobuf.Any pub_key = 2;</code>
     * @return Whether the pubKey field is set.
     */
    boolean hasPubKey();
    /**
     * <pre>
     * pub_key represents a public key in any format
     * </pre>
     *
     * <code>.google.protobuf.Any pub_key = 2;</code>
     * @return The pubKey.
     */
    com.google.protobuf.Any getPubKey();
    /**
     * <pre>
     * pub_key represents a public key in any format
     * </pre>
     *
     * <code>.google.protobuf.Any pub_key = 2;</code>
     */
    com.google.protobuf.AnyOrBuilder getPubKeyOrBuilder();

    /**
     * <pre>
     * local stores the private key locally.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
     * @return Whether the local field is set.
     */
    boolean hasLocal();
    /**
     * <pre>
     * local stores the private key locally.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
     * @return The local.
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local getLocal();
    /**
     * <pre>
     * local stores the private key locally.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder getLocalOrBuilder();

    /**
     * <pre>
     * ledger stores the information about a Ledger key.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
     * @return Whether the ledger field is set.
     */
    boolean hasLedger();
    /**
     * <pre>
     * ledger stores the information about a Ledger key.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
     * @return The ledger.
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger getLedger();
    /**
     * <pre>
     * ledger stores the information about a Ledger key.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder getLedgerOrBuilder();

    /**
     * <pre>
     * Multi does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
     * @return Whether the multi field is set.
     */
    boolean hasMulti();
    /**
     * <pre>
     * Multi does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
     * @return The multi.
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi getMulti();
    /**
     * <pre>
     * Multi does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder getMultiOrBuilder();

    /**
     * <pre>
     * Offline does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
     * @return Whether the offline field is set.
     */
    boolean hasOffline();
    /**
     * <pre>
     * Offline does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
     * @return The offline.
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline getOffline();
    /**
     * <pre>
     * Offline does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
     */
    cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder getOfflineOrBuilder();

    cosmos.crypto.keyring.v1.RecordOuterClass.Record.ItemCase getItemCase();
  }
  /**
   * <pre>
   * Record is used for representing a key in the keyring.
   * </pre>
   *
   * Protobuf type {@code cosmos.crypto.keyring.v1.Record}
   */
  public static final class Record extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.crypto.keyring.v1.Record)
      RecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Record.newBuilder() to construct.
    private Record(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Record();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.crypto.keyring.v1.RecordOuterClass.Record.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Builder.class);
    }

    public interface LocalOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.crypto.keyring.v1.Record.Local)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.google.protobuf.Any priv_key = 1;</code>
       * @return Whether the privKey field is set.
       */
      boolean hasPrivKey();
      /**
       * <code>.google.protobuf.Any priv_key = 1;</code>
       * @return The privKey.
       */
      com.google.protobuf.Any getPrivKey();
      /**
       * <code>.google.protobuf.Any priv_key = 1;</code>
       */
      com.google.protobuf.AnyOrBuilder getPrivKeyOrBuilder();
    }
    /**
     * <pre>
     * Item is a keyring item stored in a keyring backend.
     * Local item
     * </pre>
     *
     * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Local}
     */
    public static final class Local extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.crypto.keyring.v1.Record.Local)
        LocalOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Local.newBuilder() to construct.
      private Local(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Local() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Local();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Local_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Local_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder.class);
      }

      public static final int PRIV_KEY_FIELD_NUMBER = 1;
      private com.google.protobuf.Any privKey_;
      /**
       * <code>.google.protobuf.Any priv_key = 1;</code>
       * @return Whether the privKey field is set.
       */
      @java.lang.Override
      public boolean hasPrivKey() {
        return privKey_ != null;
      }
      /**
       * <code>.google.protobuf.Any priv_key = 1;</code>
       * @return The privKey.
       */
      @java.lang.Override
      public com.google.protobuf.Any getPrivKey() {
        return privKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : privKey_;
      }
      /**
       * <code>.google.protobuf.Any priv_key = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.AnyOrBuilder getPrivKeyOrBuilder() {
        return privKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : privKey_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (privKey_ != null) {
          output.writeMessage(1, getPrivKey());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (privKey_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPrivKey());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local)) {
          return super.equals(obj);
        }
        cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local other = (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) obj;

        if (hasPrivKey() != other.hasPrivKey()) return false;
        if (hasPrivKey()) {
          if (!getPrivKey()
              .equals(other.getPrivKey())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPrivKey()) {
          hash = (37 * hash) + PRIV_KEY_FIELD_NUMBER;
          hash = (53 * hash) + getPrivKey().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Item is a keyring item stored in a keyring backend.
       * Local item
       * </pre>
       *
       * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Local}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.crypto.keyring.v1.Record.Local)
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Local_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Local_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder.class);
        }

        // Construct using cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          privKey_ = null;
          if (privKeyBuilder_ != null) {
            privKeyBuilder_.dispose();
            privKeyBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Local_descriptor;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local getDefaultInstanceForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local build() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local buildPartial() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local result = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.privKey_ = privKeyBuilder_ == null
                ? privKey_
                : privKeyBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) {
            return mergeFrom((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local other) {
          if (other == cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance()) return this;
          if (other.hasPrivKey()) {
            mergePrivKey(other.getPrivKey());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getPrivKeyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Any privKey_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> privKeyBuilder_;
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         * @return Whether the privKey field is set.
         */
        public boolean hasPrivKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         * @return The privKey.
         */
        public com.google.protobuf.Any getPrivKey() {
          if (privKeyBuilder_ == null) {
            return privKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : privKey_;
          } else {
            return privKeyBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        public Builder setPrivKey(com.google.protobuf.Any value) {
          if (privKeyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            privKey_ = value;
          } else {
            privKeyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        public Builder setPrivKey(
            com.google.protobuf.Any.Builder builderForValue) {
          if (privKeyBuilder_ == null) {
            privKey_ = builderForValue.build();
          } else {
            privKeyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        public Builder mergePrivKey(com.google.protobuf.Any value) {
          if (privKeyBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              privKey_ != null &&
              privKey_ != com.google.protobuf.Any.getDefaultInstance()) {
              getPrivKeyBuilder().mergeFrom(value);
            } else {
              privKey_ = value;
            }
          } else {
            privKeyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        public Builder clearPrivKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          privKey_ = null;
          if (privKeyBuilder_ != null) {
            privKeyBuilder_.dispose();
            privKeyBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        public com.google.protobuf.Any.Builder getPrivKeyBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPrivKeyFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        public com.google.protobuf.AnyOrBuilder getPrivKeyOrBuilder() {
          if (privKeyBuilder_ != null) {
            return privKeyBuilder_.getMessageOrBuilder();
          } else {
            return privKey_ == null ?
                com.google.protobuf.Any.getDefaultInstance() : privKey_;
          }
        }
        /**
         * <code>.google.protobuf.Any priv_key = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
            getPrivKeyFieldBuilder() {
          if (privKeyBuilder_ == null) {
            privKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                    getPrivKey(),
                    getParentForChildren(),
                    isClean());
            privKey_ = null;
          }
          return privKeyBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.crypto.keyring.v1.Record.Local)
      }

      // @@protoc_insertion_point(class_scope:cosmos.crypto.keyring.v1.Record.Local)
      private static final cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local();
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Local>
          PARSER = new com.google.protobuf.AbstractParser<Local>() {
        @java.lang.Override
        public Local parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Local> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Local> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LedgerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.crypto.keyring.v1.Record.Ledger)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
       * @return Whether the path field is set.
       */
      boolean hasPath();
      /**
       * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
       * @return The path.
       */
      cosmos.crypto.hd.v1.Hd.BIP44Params getPath();
      /**
       * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
       */
      cosmos.crypto.hd.v1.Hd.BIP44ParamsOrBuilder getPathOrBuilder();
    }
    /**
     * <pre>
     * Ledger item
     * </pre>
     *
     * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Ledger}
     */
    public static final class Ledger extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.crypto.keyring.v1.Record.Ledger)
        LedgerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ledger.newBuilder() to construct.
      private Ledger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ledger() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Ledger();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Ledger_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Ledger_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder.class);
      }

      public static final int PATH_FIELD_NUMBER = 1;
      private cosmos.crypto.hd.v1.Hd.BIP44Params path_;
      /**
       * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
       * @return Whether the path field is set.
       */
      @java.lang.Override
      public boolean hasPath() {
        return path_ != null;
      }
      /**
       * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
       * @return The path.
       */
      @java.lang.Override
      public cosmos.crypto.hd.v1.Hd.BIP44Params getPath() {
        return path_ == null ? cosmos.crypto.hd.v1.Hd.BIP44Params.getDefaultInstance() : path_;
      }
      /**
       * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
       */
      @java.lang.Override
      public cosmos.crypto.hd.v1.Hd.BIP44ParamsOrBuilder getPathOrBuilder() {
        return path_ == null ? cosmos.crypto.hd.v1.Hd.BIP44Params.getDefaultInstance() : path_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (path_ != null) {
          output.writeMessage(1, getPath());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (path_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPath());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger)) {
          return super.equals(obj);
        }
        cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger other = (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) obj;

        if (hasPath() != other.hasPath()) return false;
        if (hasPath()) {
          if (!getPath()
              .equals(other.getPath())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPath()) {
          hash = (37 * hash) + PATH_FIELD_NUMBER;
          hash = (53 * hash) + getPath().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ledger item
       * </pre>
       *
       * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Ledger}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.crypto.keyring.v1.Record.Ledger)
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Ledger_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Ledger_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder.class);
        }

        // Construct using cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          path_ = null;
          if (pathBuilder_ != null) {
            pathBuilder_.dispose();
            pathBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Ledger_descriptor;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger getDefaultInstanceForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger build() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger buildPartial() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger result = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.path_ = pathBuilder_ == null
                ? path_
                : pathBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) {
            return mergeFrom((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger other) {
          if (other == cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance()) return this;
          if (other.hasPath()) {
            mergePath(other.getPath());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getPathFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private cosmos.crypto.hd.v1.Hd.BIP44Params path_;
        private com.google.protobuf.SingleFieldBuilderV3<
            cosmos.crypto.hd.v1.Hd.BIP44Params, cosmos.crypto.hd.v1.Hd.BIP44Params.Builder, cosmos.crypto.hd.v1.Hd.BIP44ParamsOrBuilder> pathBuilder_;
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         * @return Whether the path field is set.
         */
        public boolean hasPath() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         * @return The path.
         */
        public cosmos.crypto.hd.v1.Hd.BIP44Params getPath() {
          if (pathBuilder_ == null) {
            return path_ == null ? cosmos.crypto.hd.v1.Hd.BIP44Params.getDefaultInstance() : path_;
          } else {
            return pathBuilder_.getMessage();
          }
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        public Builder setPath(cosmos.crypto.hd.v1.Hd.BIP44Params value) {
          if (pathBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            path_ = value;
          } else {
            pathBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        public Builder setPath(
            cosmos.crypto.hd.v1.Hd.BIP44Params.Builder builderForValue) {
          if (pathBuilder_ == null) {
            path_ = builderForValue.build();
          } else {
            pathBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        public Builder mergePath(cosmos.crypto.hd.v1.Hd.BIP44Params value) {
          if (pathBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              path_ != null &&
              path_ != cosmos.crypto.hd.v1.Hd.BIP44Params.getDefaultInstance()) {
              getPathBuilder().mergeFrom(value);
            } else {
              path_ = value;
            }
          } else {
            pathBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        public Builder clearPath() {
          bitField0_ = (bitField0_ & ~0x00000001);
          path_ = null;
          if (pathBuilder_ != null) {
            pathBuilder_.dispose();
            pathBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        public cosmos.crypto.hd.v1.Hd.BIP44Params.Builder getPathBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPathFieldBuilder().getBuilder();
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        public cosmos.crypto.hd.v1.Hd.BIP44ParamsOrBuilder getPathOrBuilder() {
          if (pathBuilder_ != null) {
            return pathBuilder_.getMessageOrBuilder();
          } else {
            return path_ == null ?
                cosmos.crypto.hd.v1.Hd.BIP44Params.getDefaultInstance() : path_;
          }
        }
        /**
         * <code>.cosmos.crypto.hd.v1.BIP44Params path = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            cosmos.crypto.hd.v1.Hd.BIP44Params, cosmos.crypto.hd.v1.Hd.BIP44Params.Builder, cosmos.crypto.hd.v1.Hd.BIP44ParamsOrBuilder> 
            getPathFieldBuilder() {
          if (pathBuilder_ == null) {
            pathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                cosmos.crypto.hd.v1.Hd.BIP44Params, cosmos.crypto.hd.v1.Hd.BIP44Params.Builder, cosmos.crypto.hd.v1.Hd.BIP44ParamsOrBuilder>(
                    getPath(),
                    getParentForChildren(),
                    isClean());
            path_ = null;
          }
          return pathBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.crypto.keyring.v1.Record.Ledger)
      }

      // @@protoc_insertion_point(class_scope:cosmos.crypto.keyring.v1.Record.Ledger)
      private static final cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger();
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ledger>
          PARSER = new com.google.protobuf.AbstractParser<Ledger>() {
        @java.lang.Override
        public Ledger parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Ledger> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ledger> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MultiOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.crypto.keyring.v1.Record.Multi)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * Multi item
     * </pre>
     *
     * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Multi}
     */
    public static final class Multi extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.crypto.keyring.v1.Record.Multi)
        MultiOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Multi.newBuilder() to construct.
      private Multi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Multi() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Multi();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Multi_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Multi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi)) {
          return super.equals(obj);
        }
        cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi other = (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) obj;

        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Multi item
       * </pre>
       *
       * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Multi}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.crypto.keyring.v1.Record.Multi)
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Multi_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Multi_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder.class);
        }

        // Construct using cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Multi_descriptor;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi getDefaultInstanceForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi build() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi buildPartial() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi result = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) {
            return mergeFrom((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi other) {
          if (other == cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.crypto.keyring.v1.Record.Multi)
      }

      // @@protoc_insertion_point(class_scope:cosmos.crypto.keyring.v1.Record.Multi)
      private static final cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi();
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Multi>
          PARSER = new com.google.protobuf.AbstractParser<Multi>() {
        @java.lang.Override
        public Multi parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Multi> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Multi> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OfflineOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.crypto.keyring.v1.Record.Offline)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * Offline item
     * </pre>
     *
     * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Offline}
     */
    public static final class Offline extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.crypto.keyring.v1.Record.Offline)
        OfflineOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Offline.newBuilder() to construct.
      private Offline(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Offline() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Offline();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Offline_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Offline_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline)) {
          return super.equals(obj);
        }
        cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline other = (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) obj;

        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Offline item
       * </pre>
       *
       * Protobuf type {@code cosmos.crypto.keyring.v1.Record.Offline}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.crypto.keyring.v1.Record.Offline)
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Offline_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Offline_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder.class);
        }

        // Construct using cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_Offline_descriptor;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline getDefaultInstanceForType() {
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline build() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline buildPartial() {
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline result = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) {
            return mergeFrom((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline other) {
          if (other == cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.crypto.keyring.v1.Record.Offline)
      }

      // @@protoc_insertion_point(class_scope:cosmos.crypto.keyring.v1.Record.Offline)
      private static final cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline();
      }

      public static cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Offline>
          PARSER = new com.google.protobuf.AbstractParser<Offline>() {
        @java.lang.Override
        public Offline parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Offline> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Offline> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int itemCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object item_;
    public enum ItemCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LOCAL(3),
      LEDGER(4),
      MULTI(5),
      OFFLINE(6),
      ITEM_NOT_SET(0);
      private final int value;
      private ItemCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ItemCase valueOf(int value) {
        return forNumber(value);
      }

      public static ItemCase forNumber(int value) {
        switch (value) {
          case 3: return LOCAL;
          case 4: return LEDGER;
          case 5: return MULTI;
          case 6: return OFFLINE;
          case 0: return ITEM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ItemCase
    getItemCase() {
      return ItemCase.forNumber(
          itemCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * name represents a name of Record
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name represents a name of Record
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUB_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.Any pubKey_;
    /**
     * <pre>
     * pub_key represents a public key in any format
     * </pre>
     *
     * <code>.google.protobuf.Any pub_key = 2;</code>
     * @return Whether the pubKey field is set.
     */
    @java.lang.Override
    public boolean hasPubKey() {
      return pubKey_ != null;
    }
    /**
     * <pre>
     * pub_key represents a public key in any format
     * </pre>
     *
     * <code>.google.protobuf.Any pub_key = 2;</code>
     * @return The pubKey.
     */
    @java.lang.Override
    public com.google.protobuf.Any getPubKey() {
      return pubKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : pubKey_;
    }
    /**
     * <pre>
     * pub_key represents a public key in any format
     * </pre>
     *
     * <code>.google.protobuf.Any pub_key = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getPubKeyOrBuilder() {
      return pubKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : pubKey_;
    }

    public static final int LOCAL_FIELD_NUMBER = 3;
    /**
     * <pre>
     * local stores the private key locally.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
     * @return Whether the local field is set.
     */
    @java.lang.Override
    public boolean hasLocal() {
      return itemCase_ == 3;
    }
    /**
     * <pre>
     * local stores the private key locally.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
     * @return The local.
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local getLocal() {
      if (itemCase_ == 3) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
    }
    /**
     * <pre>
     * local stores the private key locally.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder getLocalOrBuilder() {
      if (itemCase_ == 3) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
    }

    public static final int LEDGER_FIELD_NUMBER = 4;
    /**
     * <pre>
     * ledger stores the information about a Ledger key.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
     * @return Whether the ledger field is set.
     */
    @java.lang.Override
    public boolean hasLedger() {
      return itemCase_ == 4;
    }
    /**
     * <pre>
     * ledger stores the information about a Ledger key.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
     * @return The ledger.
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger getLedger() {
      if (itemCase_ == 4) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
    }
    /**
     * <pre>
     * ledger stores the information about a Ledger key.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder getLedgerOrBuilder() {
      if (itemCase_ == 4) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
    }

    public static final int MULTI_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Multi does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
     * @return Whether the multi field is set.
     */
    @java.lang.Override
    public boolean hasMulti() {
      return itemCase_ == 5;
    }
    /**
     * <pre>
     * Multi does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
     * @return The multi.
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi getMulti() {
      if (itemCase_ == 5) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
    }
    /**
     * <pre>
     * Multi does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder getMultiOrBuilder() {
      if (itemCase_ == 5) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
    }

    public static final int OFFLINE_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Offline does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
     * @return Whether the offline field is set.
     */
    @java.lang.Override
    public boolean hasOffline() {
      return itemCase_ == 6;
    }
    /**
     * <pre>
     * Offline does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
     * @return The offline.
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline getOffline() {
      if (itemCase_ == 6) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
    }
    /**
     * <pre>
     * Offline does not store any other information.
     * </pre>
     *
     * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
     */
    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder getOfflineOrBuilder() {
      if (itemCase_ == 6) {
         return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_;
      }
      return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (pubKey_ != null) {
        output.writeMessage(2, getPubKey());
      }
      if (itemCase_ == 3) {
        output.writeMessage(3, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_);
      }
      if (itemCase_ == 4) {
        output.writeMessage(4, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_);
      }
      if (itemCase_ == 5) {
        output.writeMessage(5, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_);
      }
      if (itemCase_ == 6) {
        output.writeMessage(6, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (pubKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPubKey());
      }
      if (itemCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_);
      }
      if (itemCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_);
      }
      if (itemCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_);
      }
      if (itemCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record)) {
        return super.equals(obj);
      }
      cosmos.crypto.keyring.v1.RecordOuterClass.Record other = (cosmos.crypto.keyring.v1.RecordOuterClass.Record) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasPubKey() != other.hasPubKey()) return false;
      if (hasPubKey()) {
        if (!getPubKey()
            .equals(other.getPubKey())) return false;
      }
      if (!getItemCase().equals(other.getItemCase())) return false;
      switch (itemCase_) {
        case 3:
          if (!getLocal()
              .equals(other.getLocal())) return false;
          break;
        case 4:
          if (!getLedger()
              .equals(other.getLedger())) return false;
          break;
        case 5:
          if (!getMulti()
              .equals(other.getMulti())) return false;
          break;
        case 6:
          if (!getOffline()
              .equals(other.getOffline())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasPubKey()) {
        hash = (37 * hash) + PUB_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPubKey().hashCode();
      }
      switch (itemCase_) {
        case 3:
          hash = (37 * hash) + LOCAL_FIELD_NUMBER;
          hash = (53 * hash) + getLocal().hashCode();
          break;
        case 4:
          hash = (37 * hash) + LEDGER_FIELD_NUMBER;
          hash = (53 * hash) + getLedger().hashCode();
          break;
        case 5:
          hash = (37 * hash) + MULTI_FIELD_NUMBER;
          hash = (53 * hash) + getMulti().hashCode();
          break;
        case 6:
          hash = (37 * hash) + OFFLINE_FIELD_NUMBER;
          hash = (53 * hash) + getOffline().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.crypto.keyring.v1.RecordOuterClass.Record prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Record is used for representing a key in the keyring.
     * </pre>
     *
     * Protobuf type {@code cosmos.crypto.keyring.v1.Record}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.crypto.keyring.v1.Record)
        cosmos.crypto.keyring.v1.RecordOuterClass.RecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.crypto.keyring.v1.RecordOuterClass.Record.class, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Builder.class);
      }

      // Construct using cosmos.crypto.keyring.v1.RecordOuterClass.Record.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        pubKey_ = null;
        if (pubKeyBuilder_ != null) {
          pubKeyBuilder_.dispose();
          pubKeyBuilder_ = null;
        }
        if (localBuilder_ != null) {
          localBuilder_.clear();
        }
        if (ledgerBuilder_ != null) {
          ledgerBuilder_.clear();
        }
        if (multiBuilder_ != null) {
          multiBuilder_.clear();
        }
        if (offlineBuilder_ != null) {
          offlineBuilder_.clear();
        }
        itemCase_ = 0;
        item_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.internal_static_cosmos_crypto_keyring_v1_Record_descriptor;
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record getDefaultInstanceForType() {
        return cosmos.crypto.keyring.v1.RecordOuterClass.Record.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record build() {
        cosmos.crypto.keyring.v1.RecordOuterClass.Record result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record buildPartial() {
        cosmos.crypto.keyring.v1.RecordOuterClass.Record result = new cosmos.crypto.keyring.v1.RecordOuterClass.Record(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(cosmos.crypto.keyring.v1.RecordOuterClass.Record result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pubKey_ = pubKeyBuilder_ == null
              ? pubKey_
              : pubKeyBuilder_.build();
        }
      }

      private void buildPartialOneofs(cosmos.crypto.keyring.v1.RecordOuterClass.Record result) {
        result.itemCase_ = itemCase_;
        result.item_ = this.item_;
        if (itemCase_ == 3 &&
            localBuilder_ != null) {
          result.item_ = localBuilder_.build();
        }
        if (itemCase_ == 4 &&
            ledgerBuilder_ != null) {
          result.item_ = ledgerBuilder_.build();
        }
        if (itemCase_ == 5 &&
            multiBuilder_ != null) {
          result.item_ = multiBuilder_.build();
        }
        if (itemCase_ == 6 &&
            offlineBuilder_ != null) {
          result.item_ = offlineBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.crypto.keyring.v1.RecordOuterClass.Record) {
          return mergeFrom((cosmos.crypto.keyring.v1.RecordOuterClass.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.crypto.keyring.v1.RecordOuterClass.Record other) {
        if (other == cosmos.crypto.keyring.v1.RecordOuterClass.Record.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPubKey()) {
          mergePubKey(other.getPubKey());
        }
        switch (other.getItemCase()) {
          case LOCAL: {
            mergeLocal(other.getLocal());
            break;
          }
          case LEDGER: {
            mergeLedger(other.getLedger());
            break;
          }
          case MULTI: {
            mergeMulti(other.getMulti());
            break;
          }
          case OFFLINE: {
            mergeOffline(other.getOffline());
            break;
          }
          case ITEM_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPubKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getLocalFieldBuilder().getBuilder(),
                    extensionRegistry);
                itemCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getLedgerFieldBuilder().getBuilder(),
                    extensionRegistry);
                itemCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getMultiFieldBuilder().getBuilder(),
                    extensionRegistry);
                itemCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getOfflineFieldBuilder().getBuilder(),
                    extensionRegistry);
                itemCase_ = 6;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int itemCase_ = 0;
      private java.lang.Object item_;
      public ItemCase
          getItemCase() {
        return ItemCase.forNumber(
            itemCase_);
      }

      public Builder clearItem() {
        itemCase_ = 0;
        item_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name represents a name of Record
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name represents a name of Record
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name represents a name of Record
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name represents a name of Record
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name represents a name of Record
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any pubKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> pubKeyBuilder_;
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       * @return Whether the pubKey field is set.
       */
      public boolean hasPubKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       * @return The pubKey.
       */
      public com.google.protobuf.Any getPubKey() {
        if (pubKeyBuilder_ == null) {
          return pubKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : pubKey_;
        } else {
          return pubKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      public Builder setPubKey(com.google.protobuf.Any value) {
        if (pubKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pubKey_ = value;
        } else {
          pubKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      public Builder setPubKey(
          com.google.protobuf.Any.Builder builderForValue) {
        if (pubKeyBuilder_ == null) {
          pubKey_ = builderForValue.build();
        } else {
          pubKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      public Builder mergePubKey(com.google.protobuf.Any value) {
        if (pubKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            pubKey_ != null &&
            pubKey_ != com.google.protobuf.Any.getDefaultInstance()) {
            getPubKeyBuilder().mergeFrom(value);
          } else {
            pubKey_ = value;
          }
        } else {
          pubKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      public Builder clearPubKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pubKey_ = null;
        if (pubKeyBuilder_ != null) {
          pubKeyBuilder_.dispose();
          pubKeyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      public com.google.protobuf.Any.Builder getPubKeyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPubKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      public com.google.protobuf.AnyOrBuilder getPubKeyOrBuilder() {
        if (pubKeyBuilder_ != null) {
          return pubKeyBuilder_.getMessageOrBuilder();
        } else {
          return pubKey_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : pubKey_;
        }
      }
      /**
       * <pre>
       * pub_key represents a public key in any format
       * </pre>
       *
       * <code>.google.protobuf.Any pub_key = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getPubKeyFieldBuilder() {
        if (pubKeyBuilder_ == null) {
          pubKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getPubKey(),
                  getParentForChildren(),
                  isClean());
          pubKey_ = null;
        }
        return pubKeyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder> localBuilder_;
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       * @return Whether the local field is set.
       */
      @java.lang.Override
      public boolean hasLocal() {
        return itemCase_ == 3;
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       * @return The local.
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local getLocal() {
        if (localBuilder_ == null) {
          if (itemCase_ == 3) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
        } else {
          if (itemCase_ == 3) {
            return localBuilder_.getMessage();
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      public Builder setLocal(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local value) {
        if (localBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          item_ = value;
          onChanged();
        } else {
          localBuilder_.setMessage(value);
        }
        itemCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      public Builder setLocal(
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder builderForValue) {
        if (localBuilder_ == null) {
          item_ = builderForValue.build();
          onChanged();
        } else {
          localBuilder_.setMessage(builderForValue.build());
        }
        itemCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      public Builder mergeLocal(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local value) {
        if (localBuilder_ == null) {
          if (itemCase_ == 3 &&
              item_ != cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance()) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.newBuilder((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_)
                .mergeFrom(value).buildPartial();
          } else {
            item_ = value;
          }
          onChanged();
        } else {
          if (itemCase_ == 3) {
            localBuilder_.mergeFrom(value);
          } else {
            localBuilder_.setMessage(value);
          }
        }
        itemCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      public Builder clearLocal() {
        if (localBuilder_ == null) {
          if (itemCase_ == 3) {
            itemCase_ = 0;
            item_ = null;
            onChanged();
          }
        } else {
          if (itemCase_ == 3) {
            itemCase_ = 0;
            item_ = null;
          }
          localBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder getLocalBuilder() {
        return getLocalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder getLocalOrBuilder() {
        if ((itemCase_ == 3) && (localBuilder_ != null)) {
          return localBuilder_.getMessageOrBuilder();
        } else {
          if (itemCase_ == 3) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * local stores the private key locally.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Local local = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder> 
          getLocalFieldBuilder() {
        if (localBuilder_ == null) {
          if (!(itemCase_ == 3)) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.getDefaultInstance();
          }
          localBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.LocalOrBuilder>(
                  (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Local) item_,
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        itemCase_ = 3;
        onChanged();
        return localBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder> ledgerBuilder_;
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       * @return Whether the ledger field is set.
       */
      @java.lang.Override
      public boolean hasLedger() {
        return itemCase_ == 4;
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       * @return The ledger.
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger getLedger() {
        if (ledgerBuilder_ == null) {
          if (itemCase_ == 4) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
        } else {
          if (itemCase_ == 4) {
            return ledgerBuilder_.getMessage();
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      public Builder setLedger(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger value) {
        if (ledgerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          item_ = value;
          onChanged();
        } else {
          ledgerBuilder_.setMessage(value);
        }
        itemCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      public Builder setLedger(
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder builderForValue) {
        if (ledgerBuilder_ == null) {
          item_ = builderForValue.build();
          onChanged();
        } else {
          ledgerBuilder_.setMessage(builderForValue.build());
        }
        itemCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      public Builder mergeLedger(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger value) {
        if (ledgerBuilder_ == null) {
          if (itemCase_ == 4 &&
              item_ != cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance()) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.newBuilder((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_)
                .mergeFrom(value).buildPartial();
          } else {
            item_ = value;
          }
          onChanged();
        } else {
          if (itemCase_ == 4) {
            ledgerBuilder_.mergeFrom(value);
          } else {
            ledgerBuilder_.setMessage(value);
          }
        }
        itemCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      public Builder clearLedger() {
        if (ledgerBuilder_ == null) {
          if (itemCase_ == 4) {
            itemCase_ = 0;
            item_ = null;
            onChanged();
          }
        } else {
          if (itemCase_ == 4) {
            itemCase_ = 0;
            item_ = null;
          }
          ledgerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder getLedgerBuilder() {
        return getLedgerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder getLedgerOrBuilder() {
        if ((itemCase_ == 4) && (ledgerBuilder_ != null)) {
          return ledgerBuilder_.getMessageOrBuilder();
        } else {
          if (itemCase_ == 4) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * ledger stores the information about a Ledger key.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Ledger ledger = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder> 
          getLedgerFieldBuilder() {
        if (ledgerBuilder_ == null) {
          if (!(itemCase_ == 4)) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.getDefaultInstance();
          }
          ledgerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.LedgerOrBuilder>(
                  (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Ledger) item_,
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        itemCase_ = 4;
        onChanged();
        return ledgerBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder> multiBuilder_;
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       * @return Whether the multi field is set.
       */
      @java.lang.Override
      public boolean hasMulti() {
        return itemCase_ == 5;
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       * @return The multi.
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi getMulti() {
        if (multiBuilder_ == null) {
          if (itemCase_ == 5) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
        } else {
          if (itemCase_ == 5) {
            return multiBuilder_.getMessage();
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      public Builder setMulti(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi value) {
        if (multiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          item_ = value;
          onChanged();
        } else {
          multiBuilder_.setMessage(value);
        }
        itemCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      public Builder setMulti(
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder builderForValue) {
        if (multiBuilder_ == null) {
          item_ = builderForValue.build();
          onChanged();
        } else {
          multiBuilder_.setMessage(builderForValue.build());
        }
        itemCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      public Builder mergeMulti(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi value) {
        if (multiBuilder_ == null) {
          if (itemCase_ == 5 &&
              item_ != cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance()) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.newBuilder((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_)
                .mergeFrom(value).buildPartial();
          } else {
            item_ = value;
          }
          onChanged();
        } else {
          if (itemCase_ == 5) {
            multiBuilder_.mergeFrom(value);
          } else {
            multiBuilder_.setMessage(value);
          }
        }
        itemCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      public Builder clearMulti() {
        if (multiBuilder_ == null) {
          if (itemCase_ == 5) {
            itemCase_ = 0;
            item_ = null;
            onChanged();
          }
        } else {
          if (itemCase_ == 5) {
            itemCase_ = 0;
            item_ = null;
          }
          multiBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder getMultiBuilder() {
        return getMultiFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder getMultiOrBuilder() {
        if ((itemCase_ == 5) && (multiBuilder_ != null)) {
          return multiBuilder_.getMessageOrBuilder();
        } else {
          if (itemCase_ == 5) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Multi does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Multi multi = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder> 
          getMultiFieldBuilder() {
        if (multiBuilder_ == null) {
          if (!(itemCase_ == 5)) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.getDefaultInstance();
          }
          multiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.MultiOrBuilder>(
                  (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Multi) item_,
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        itemCase_ = 5;
        onChanged();
        return multiBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder> offlineBuilder_;
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       * @return Whether the offline field is set.
       */
      @java.lang.Override
      public boolean hasOffline() {
        return itemCase_ == 6;
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       * @return The offline.
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline getOffline() {
        if (offlineBuilder_ == null) {
          if (itemCase_ == 6) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
        } else {
          if (itemCase_ == 6) {
            return offlineBuilder_.getMessage();
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      public Builder setOffline(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline value) {
        if (offlineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          item_ = value;
          onChanged();
        } else {
          offlineBuilder_.setMessage(value);
        }
        itemCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      public Builder setOffline(
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder builderForValue) {
        if (offlineBuilder_ == null) {
          item_ = builderForValue.build();
          onChanged();
        } else {
          offlineBuilder_.setMessage(builderForValue.build());
        }
        itemCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      public Builder mergeOffline(cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline value) {
        if (offlineBuilder_ == null) {
          if (itemCase_ == 6 &&
              item_ != cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance()) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.newBuilder((cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_)
                .mergeFrom(value).buildPartial();
          } else {
            item_ = value;
          }
          onChanged();
        } else {
          if (itemCase_ == 6) {
            offlineBuilder_.mergeFrom(value);
          } else {
            offlineBuilder_.setMessage(value);
          }
        }
        itemCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      public Builder clearOffline() {
        if (offlineBuilder_ == null) {
          if (itemCase_ == 6) {
            itemCase_ = 0;
            item_ = null;
            onChanged();
          }
        } else {
          if (itemCase_ == 6) {
            itemCase_ = 0;
            item_ = null;
          }
          offlineBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder getOfflineBuilder() {
        return getOfflineFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      @java.lang.Override
      public cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder getOfflineOrBuilder() {
        if ((itemCase_ == 6) && (offlineBuilder_ != null)) {
          return offlineBuilder_.getMessageOrBuilder();
        } else {
          if (itemCase_ == 6) {
            return (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_;
          }
          return cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Offline does not store any other information.
       * </pre>
       *
       * <code>.cosmos.crypto.keyring.v1.Record.Offline offline = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder> 
          getOfflineFieldBuilder() {
        if (offlineBuilder_ == null) {
          if (!(itemCase_ == 6)) {
            item_ = cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.getDefaultInstance();
          }
          offlineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline, cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline.Builder, cosmos.crypto.keyring.v1.RecordOuterClass.Record.OfflineOrBuilder>(
                  (cosmos.crypto.keyring.v1.RecordOuterClass.Record.Offline) item_,
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        itemCase_ = 6;
        onChanged();
        return offlineBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.crypto.keyring.v1.Record)
    }

    // @@protoc_insertion_point(class_scope:cosmos.crypto.keyring.v1.Record)
    private static final cosmos.crypto.keyring.v1.RecordOuterClass.Record DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.crypto.keyring.v1.RecordOuterClass.Record();
    }

    public static cosmos.crypto.keyring.v1.RecordOuterClass.Record getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Record>
        PARSER = new com.google.protobuf.AbstractParser<Record>() {
      @java.lang.Override
      public Record parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Record> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.crypto.keyring.v1.RecordOuterClass.Record getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_crypto_keyring_v1_Record_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_crypto_keyring_v1_Record_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_crypto_keyring_v1_Record_Local_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_crypto_keyring_v1_Record_Local_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_crypto_keyring_v1_Record_Ledger_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_crypto_keyring_v1_Record_Ledger_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_crypto_keyring_v1_Record_Multi_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_crypto_keyring_v1_Record_Multi_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_crypto_keyring_v1_Record_Offline_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_crypto_keyring_v1_Record_Offline_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%cosmos/crypto/keyring/v1/record.proto\022" +
      "\030cosmos.crypto.keyring.v1\032\024gogoproto/gog" +
      "o.proto\032\031google/protobuf/any.proto\032\034cosm" +
      "os/crypto/hd/v1/hd.proto\"\256\003\n\006Record\022\014\n\004n" +
      "ame\030\001 \001(\t\022%\n\007pub_key\030\002 \001(\0132\024.google.prot" +
      "obuf.Any\0227\n\005local\030\003 \001(\0132&.cosmos.crypto." +
      "keyring.v1.Record.LocalH\000\0229\n\006ledger\030\004 \001(" +
      "\0132\'.cosmos.crypto.keyring.v1.Record.Ledg" +
      "erH\000\0227\n\005multi\030\005 \001(\0132&.cosmos.crypto.keyr" +
      "ing.v1.Record.MultiH\000\022;\n\007offline\030\006 \001(\0132(" +
      ".cosmos.crypto.keyring.v1.Record.Offline" +
      "H\000\032/\n\005Local\022&\n\010priv_key\030\001 \001(\0132\024.google.p" +
      "rotobuf.Any\0328\n\006Ledger\022.\n\004path\030\001 \001(\0132 .co" +
      "smos.crypto.hd.v1.BIP44Params\032\007\n\005Multi\032\t" +
      "\n\007OfflineB\006\n\004itemB5Z+github.com/cosmos/c" +
      "osmos-sdk/crypto/keyring\310\341\036\000\230\343\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.GoGoProtos.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
          cosmos.crypto.hd.v1.Hd.getDescriptor(),
        });
    internal_static_cosmos_crypto_keyring_v1_Record_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_crypto_keyring_v1_Record_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_crypto_keyring_v1_Record_descriptor,
        new java.lang.String[] { "Name", "PubKey", "Local", "Ledger", "Multi", "Offline", "Item", });
    internal_static_cosmos_crypto_keyring_v1_Record_Local_descriptor =
      internal_static_cosmos_crypto_keyring_v1_Record_descriptor.getNestedTypes().get(0);
    internal_static_cosmos_crypto_keyring_v1_Record_Local_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_crypto_keyring_v1_Record_Local_descriptor,
        new java.lang.String[] { "PrivKey", });
    internal_static_cosmos_crypto_keyring_v1_Record_Ledger_descriptor =
      internal_static_cosmos_crypto_keyring_v1_Record_descriptor.getNestedTypes().get(1);
    internal_static_cosmos_crypto_keyring_v1_Record_Ledger_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_crypto_keyring_v1_Record_Ledger_descriptor,
        new java.lang.String[] { "Path", });
    internal_static_cosmos_crypto_keyring_v1_Record_Multi_descriptor =
      internal_static_cosmos_crypto_keyring_v1_Record_descriptor.getNestedTypes().get(2);
    internal_static_cosmos_crypto_keyring_v1_Record_Multi_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_crypto_keyring_v1_Record_Multi_descriptor,
        new java.lang.String[] { });
    internal_static_cosmos_crypto_keyring_v1_Record_Offline_descriptor =
      internal_static_cosmos_crypto_keyring_v1_Record_descriptor.getNestedTypes().get(3);
    internal_static_cosmos_crypto_keyring_v1_Record_Offline_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_crypto_keyring_v1_Record_Offline_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf.GoGoProtos.gogoprotoImport);
    registry.add(com.google.protobuf.GoGoProtos.goprotoGettersAll);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.GoGoProtos.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
    cosmos.crypto.hd.v1.Hd.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
